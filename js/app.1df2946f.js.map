{"version":3,"file":"js/app.1df2946f.js","mappings":"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","sources":["webpack://pytania_na_obrone/./src/App.vue","webpack://pytania_na_obrone/./src/App.vue?7ccd","webpack://pytania_na_obrone/./src/main.js","webpack://pytania_na_obrone/webpack/bootstrap","webpack://pytania_na_obrone/webpack/runtime/chunk loaded","webpack://pytania_na_obrone/webpack/runtime/compat get default export","webpack://pytania_na_obrone/webpack/runtime/define property getters","webpack://pytania_na_obrone/webpack/runtime/global","webpack://pytania_na_obrone/webpack/runtime/hasOwnProperty shorthand","webpack://pytania_na_obrone/webpack/runtime/jsonp chunk loading","webpack://pytania_na_obrone/webpack/startup"],"sourcesContent":["<template>\n  <div :class=\"{ 'dark-mode': darkMode }\">\n    <button @click=\"darkMode = !darkMode\">💡</button>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Wymień podstawowe procesy instancji bazy danych Oracle i opisz rolę\n        jednego z nich.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Proces serwera</li>\n      <p>\n        Odpowiada za komunikację między kientem a serwerem, przetwarzanie ządań\n        uytkownika i udostępnianie danych z bazy danych.\n      </p>\n\n      <li>Proces tła</li>\n      <p>\n        Proces, który działa w tle i zajmuje się rónymi zadaniami, takimi jak\n        kontrola integralności danych, zarządzanie pamięcią czy wykonywanie\n        kopii zapasowych\n      </p>\n\n      <li>Proces zarządzania pamięcią</li>\n      <p>\n        Odpowiada za zarządzanie pamięcią w bazie danych i przypisywania jej do\n        odpowiednich procesów\n      </p>\n\n      <p>\n        Proces serwera jest bardzo wannym procesem, poniewa to on umozliwia\n        uytkownikom korzystanie z bazy danych. Kiedy uytkownik chce uzyskać\n        dostęp do danych, wysyła zapytanie do serwera, który następnie\n        przetwarza ądanie i zwraca wynik. Bez procesu serwera nie byłoby mozliwe\n        korzystanie z bazy danych\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Wymień podstawowe struktury wchodzące w skład SGA instancji bazy Oracle\n        i opisz rolę jednej z nich\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Buffer Cashe</li>\n      <p>\n        Pamięć podręczna, w której baza danych przechowuje dane wczytane z\n        dysku. Jej rolą jest przyspieszenie dostępu do danych, poniewaz\n        wczytywanie danych z tej pamięci jest szybsze niz z dysku. Zazwyczja\n        przechowuje dane jak bloki, tabele, indeksy.\n      </p>\n      <li>Shared Pool</li>\n      <p>\n        Pamięć gdzie są przechowywane informacje o sesjach uytkowników oraz\n        informacje o wykonywanych zapytaniach. Dzięki temu baza danych Oracle\n        moe wykonywać szybciej zapytania uytkowników i bardziej efektownie.\n      </p>\n      <li>Redo Log Buffer</li>\n      <p>\n        Pamięć w której baza danych przechowuje informacje o zmiennych w danych,\n        które muszą być zapisane na dysku. przechowuje informacje o zmiennych w\n        czasie rzeczywistym, a następnie zapisuje je w Redo Log Files.\n      </p>\n\n      <p>\n        Redo Log Buffer umoliwia bezpiecznie przechowywać informacje o zmianach\n        w danych, które muszą być zapisane na dysku. W przypadku awarii lub\n        utraty zasilania, baza danych moe przywrócić stan danych zapisanych w\n        Redo Log Files\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Wymień tryby zatrzymywania instancji bazy Oracle i opisz jeden z nich\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Shutdown Immediate</li>\n      <p>\n        Zatrzymuje bazę natychmiastowo. Wszystkie transakcje zostają zakończone,\n        a sesja uytkowników zamknięta. Dane niezapisane zostają zapisane. Tryb\n        stosowany w przypadku awarii / konserwacji\n      </p>\n      <li>Shutdown Normal</li>\n      <p>\n        Baza danych zostaje zamknięta ale nie kończy aktywnych transakcji. Sesje\n        uytkowników zostają zamknięte ale baza czeka na zakończenie transakcji.\n      </p>\n      <li>Shutdown Immediate with Abort</li>\n      <p>\n        Natychmiastowo zatrzymuje baze ale bez czekania na zakonczenie aktywnych\n        transakcji. Sesje uzytkownika zostaja zamkniete, a baza nie czeka na\n        zakończenie transakcji\n      </p>\n      <p>\n        W trybie Shutdown Immediate baza danych natychmiastowo zatrzymuje swoją\n        pracę, wszystkie transakcje zostaną zakończone, a sesje użytkowników\n        zostaną zamknięte. Wszystkie zmiany, które nie zostały jeszcze zapisane\n        na dysku, zostaną zapisane, co zapobiegnie utracie danych. Tryb ten jest\n        bardzo szybki i niezawodny, ale należy używać go ostrożnie, ponieważ\n        aktywne transakcje mogą zostać przerwane, co może prowadzić do utraty\n        danych lub niezgodności w bazie danych.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Wymień fazy uruchamiania instancji bazy Oracle i opisz jeden z nich.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>STARTUP NOMOUNT</li>\n      <p>\n        Uruchamianie bazy danych ale bez montowania. Brak dostępności bazy\n        danych dla uytkowników i nie mona wykonywać operacji na bazie\n      </p>\n      <li>STARTUP MOUNT</li>\n      <p>\n        Montowanie bazy danych ale bez otwarcia. Baza dostępna tylko dla\n        administratorów bazy danych, którzy mogą wykonywać operacje na poziomie\n        plików takie jak tworzenie usuwanie lub zmiana rozmiaru plików\n      </p>\n      <li>STARTUP OPEN</li>\n      <p>Jest w pełni dostępna dla uytkowników</p>\n      <p>\n        STARTUP OPEN Faza uruchamiania instancji bazy danych. W tym trybie baza\n        danych jest w pełni dostępna dla użytkowników, którzy mogą wykonywać\n        operacje na danych.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omów rolę jaką odgrywają przestrzenie tabel bazy danych Oracle</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Przestrzenie tabel w bazie danych Oracle są niezbędne dla efektywnego\n        zarządzania pamięcią dyskową i umożliwiają uniknięcie problemów\n        związanych z brakiem miejsca na dysku.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omów pojęcie transakcji w realacyjncyh bazach danych</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Transakcja w bazach danych to jednostka pracy, która wykonuje jedno lub\n        więcej poleceń SQL. Musi być wykonywana jako całość lub w ogóle nie być\n        wykonywana, zgodnie z zasadami ACID. Dzięki temu zapewniają integralność\n        danych i unikają problemów związanych z jednoczesnym dostępem do tych\n        samych danych przez różne aplikacje lub użytkowników. W przypadku awarii\n        lub błędu, baza danych cofa wszystkie zmiany dokonane przez transakcję\n        do poprzedniego stabilnego stanu bazy danych (rollback).\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wymień podstawowe grupy poleceń języka SQL i omów jedną z nich</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Polecenia DDL</li>\n      <p>\n        Słuą do tworzenia, modyfikowania i usuwania struktury bazy danych, takie\n        jak tabele, widoki, indeksy\n      </p>\n      <li>Polecenia DML</li>\n      <p>Słuą do dodawania, aktualizowania lub usuwania rekordów do tabeli</p>\n      <li>Polecenia DQL</li>\n      <p>Słuą do wyświetlania danych</p>\n      <li>Polecenia DCL</li>\n      <p>Słuą do zarządzania uprawnieniami dostępu do bazy danych</p>\n      <p>\n        Polecenia DDL, które służą do tworzenia, modyfikowania i usuwania\n        struktury bazy danych. Przykładowo, polecenie CREATE TABLE służy do\n        tworzenia nowej tabeli, a polecenie ALTER TABLE umożliwia modyfikację\n        istniejącej tabeli, na przykład dodanie nowych kolumn lub zmiana typu\n        danych. Usuwanie tabeli z bazy danych jest możliwe za pomocą polecenia\n        DROP TABLE. Polecenia DDL są bardzo ważne, ponieważ pozwalają na\n        definiowanie struktury bazy danych, która jest potrzebna do\n        przechowywania i zarządzania danymi.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Omów pojęcie normalizacji w modelu relacyjnym i scharakteryzuj jedną z\n        postaci normalnych\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Tabele w bazie danych są projektowane w taki sposób, aby kada tabela\n        zawierała tylko unikalne dane, a zaleznosci miedzy nimi byly jasno\n        okreslone i spójne.Jedną z postaci normalnych jest pierwsza postać\n        normalna (1NF). Aby tabela spełniała wymagania pierwszej postaci\n        normalnej, każda jej komórka powinna zawierać tylko pojedynczą wartość,\n        a nie zestaw wartości lub tablice. Ponadto, tabela powinna mieć unikalny\n        identyfikator (klucz główny), który jednoznacznie identyfikuje każdy\n        rekord w tabeli. Dzięki temu minimalizowane są powtórzenia danych i\n        eliminowane anomalie.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wymień podstawowe operacje algebry realacji i omów jedną z nich</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Selekcja (SELECT)</li>\n      <p>Wybiera określone rekordy z relacji spełniające określone warunki</p>\n      <li>Projekcja (PROJECT)</li>\n      <p>Wybiera określone kolumny z relacji</p>\n      <li>Łączenie (JOIN)</li>\n      <p>\n        Łączy rekordy z dwóch lub więcej relacji na podstawie określonych\n        warunków\n      </p>\n      <li>Różnica (DIFFERENCE)</li>\n      <p>Zwraca rekordy z jednej relacji, które nie występują w drugiej</p>\n      <li>Suma (UNION)</li>\n      <p>\n        Zwraca zbiór rekordów zawierający rekordy ze wszystkich relacji bez\n        powtórzeń\n      </p>\n      <p>\n        Selekcja wybiera określone rekordy z relacji spełniające określone\n        warunki. Na przykład, polecenie SELECT * FROM tabela WHERE warunek\n        wybierze wszystkie rekordy z tabeli, które spełniają określony warunek.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omów rolę i typy indeksów w relacyjnych bazach danych</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Pozwalają na szybsze wyszukiwanie i sortowanie rekordów w tabelach bazy\n        danych.\n      </p>\n      <li>Indeks podstawowy (Primary Index)</li>\n      <p>\n        Torzony na kolumnie, która jest kluczem głównym tabeli. Zapewnia\n        unikatowość wartości w kolumnie i przyspiesza wyszukiwanie rekordów po\n        kluczy głownym\n      </p>\n      <li>Indeks złożony (Secondary Index)</li>\n      <p>\n        Umoliwia szybkie wyszukiwanie i sortowanie rekordów po wartościach w\n        kolumnach indeksowych\n      </p>\n      <li>Indeks bitmapowy (Bitmap Index)</li>\n      <p>\n        Indeks bitmapowy tworzy mapę bitową dla każdej wartości w kolumnie i\n        umożliwia szybkie wyszukiwanie rekordów zawierających określone\n        wartości.\n      </p>\n      <li>Indeks funkcjonalny (Function-based Index)</li>\n      <p>\n        Tworzony na podstawie funkcji matematycznych lub logicznych stosowanych\n        na wartościach w kolumnie. Umożliwia szybkie wyszukiwanie i sortowanie\n        rekordów po wartościach uzyskiwanych przez funkcje.\n      </p>\n      <li>Indeks pełnotekstowy (Full-text Index)</li>\n      <p>\n        Stosowany w przypadku, gdy tabela zawiera duże ilości tekstu. Indeks\n        pełnotekstowy umożliwia szybkie wyszukiwanie rekordów po określonych\n        słowach lub frazach w tekście.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wymień podstawowe moduły klasy ERP i omów jeden z nich</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        ERP (Enterprise Resource Planning) to system informatyczny, który\n        integruje różne procesy biznesowe w organizacji, takie jak zarządzanie\n        finansami, produkcją, sprzedażą, logistyką, magazynem czy personelem.\n        Podstawowe moduły klasy ERP to:\n      </p>\n      <li>Moduł finansowo-księgowy</li>\n      <p>\n        umoliwia prowadzenie ewidencji finansowej, w tym księgowości, budetów,\n        płatności, fakturowania oraz raportowania finansowego.\n      </p>\n      <li>Moduł produkcji</li>\n      <p>\n        Pozwala na planowanie, kontrolę i optymalizację procesów produkcyjnych\n      </p>\n      <li>Moduł sprzedazy</li>\n      <p>\n        Umozliwia zarządzanie procesami sprzeday, w tym ofertami, zamówieniami,\n        kontraktami, a take relacjami z klientem\n      </p>\n      <li>Moduł personalny</li>\n      <p>\n        Umoliwia zarządzanie kadrami, planowanie pracy, wynagrodzeniami i\n        szkoleniami\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Wymień typy procesów roboczych w systemie SAP NetWeaver i omów rolę\n        jednego z nich.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Procesy biznesowe</li>\n      <p>\n        Sekwencja powiązanych ze sobą działań biznesowych, które pozwalaną na\n        realizację określonego celu. Ich aytomatyzacja i monitorowanie zapewnia\n        zwiększenie efektywności i kontroli nad działanami biznesowymi\n      </p>\n      <li>Proces Integralny</li>\n      <p>\n        Integrują róne aplikacje i systemy w organizacji, umoliwiając\n        przesyłanie danych między nimi.\n      </p>\n      <li>Procesy automatyzacji</li>\n      <p>\n        Proces w którym zadania wykonywane przez uzytkowników są zautomatyzowane\n        przy pomocy reguł biznesowych lub algorytmów\n      </p>\n      <p>\n        Rolą procesu integracji jest umoliwienie wymiany danych między rónymi\n        aplikacjami i systemami w organizacji. Dzięki temu moliwe jest\n        zapewnienie jednolitej i spójnej bazy danych, co przekłada się na\n        poprawę jakości informacji i zwiększenie efektywności działąń\n        biznesowych. W ramach procesu integracyjnego w SAP NetWeaver mozna\n        wykorzystać rózne standardy i protokoły jak SOAP, HTTP, FTP. Pozwalają\n        one na łatwą integrację z róznymi aplikacjami i systemami\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Wymień typy użytkowników w systemie SAP NetWeaver i omów rolę jednego z\n        nich.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Użytkownik końcowy</li>\n      <p>\n        Osoba, która korzysta z róznych aplikacji SAP w celu wykonania\n        określonych zadań biznesowych\n      </p>\n      <li>Administrator systemu</li>\n      <p>\n        Osoba odpowiedzialna za zarządzanie i konfiguracje systemu SAP\n        NetWeaver. Instaluje i aktualizuje system, zarządza uzytkownikami i\n        rolami.\n      </p>\n      <li>Deweloper</li>\n      <p>\n        Osoba która tworzy i rozwija aplikacje. Zajmują się programowaniem w\n        języku ABAP, projektowaniem interfejsów uzytkownika i testami\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Wymień typy urządzeń w podsystemie wydruku w systemie SAP NetWeaver i\n        omów rolę jednego z nich.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Drukarka lokalna</li>\n      <p>\n        Urządzenie podłączone bezpośrednio do komputera uzytkownika. Drukarka\n        lokalna moze być wykorzystywana do wydruku raportów, formularzy i innych\n        dokumentów z systemu SAP\n      </p>\n      <li>Drukarka sieciowa</li>\n      <p>\n        Urządzenie podłączone do sieci komputerowej, która umozliwia\n        wykorzystywanie przez wiele uzytkownikow w roznych miejscach\n      </p>\n      <li>Drukarka SAP</li>\n      <p>\n        Urzadzenie specjalnie zaprojektowane do wydruku dokumentow z systemu\n        SAP. Pozwalaja na drukowanie raportow faktur, etykiet i innych\n        dokumentow w sposob zoptymalizowany pod katem specyfikacji SAP\n      </p>\n      <p>\n        Drukarka sieciowa - umozliwia wielu uzytkownikom korzystanie z jednego\n        urzadzenia, co przyczynia sie do zwiekszenia wydajnosci i oszczędności w\n        firmie. Pozwala na drukowanie dokumentów z dowolnego miejsca w sieci, co\n        ułatwia pracę zespołową i umozliwia szybsze przetwarzanie infrmacji.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Wymień składowe czasu odpowiedzi w systemie SAP NetWeaver i omów jedną z\n        nich\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Czas przetwarzania serwera</li>\n      <p>\n        Czas który serwer potrzebuje na przetworzenie zapytania i wygenerowanie\n        odpowiedzi. Zalezy od mocy obliczeniowej serwera oraz od liczby i\n        złozoności wykonywanych operacji.\n      </p>\n      <li>Czas przetwarzania sieciowego</li>\n      <p>\n        Czas który potrzebny jest na przesłanie danych między kientem a serwerem\n        przez sieć. Zaley od przepustowości sieci oraz wielkości przesyłanych\n        danych.\n      </p>\n      <li>Czas przetwarzanie klienta</li>\n      <p>\n        Czas który potrzebny jest na przetworzenie danych przez klienta, np.\n        wyświetlenie wyników zapytania lub na wykonanie obliczeń po stronie\n        klienta.\n      </p>\n      <p>\n        Przetwarzanie serwera jest to czas, który jest potrzeby na przetworzenie\n        zapytania i wygenerowanie odpowiedzi przez serwer. Składowa ta moze być\n        uzalezniona od wielu czynników, takich jak załoznosc wykonywanych\n        operacji, obciązenie serwera, konfiguracji serwera oraz ilosci dostępnej\n        pamięci.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Opóźnienie propagancji; transmisji; przetwarzania; kolejkowania.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Opóźnienie propagacji</li>\n      <p>\n        Czas potrzebny na przesłanie sygnału lub informacji przez medium\n        transmisyjne, np. przewód, kabel czy falę radiową. Opóźnienie zalezy od\n        długości trasy, jaką musi pokonać zygnał, a takze od szybkosci\n        rozchodzenia sie sygnalu w danym medium.\n      </p>\n      <li>Opóźnienie transmisji</li>\n      <p>\n        Czas potrzebny na wysłanie bitów danych przez medium transmisyjne.\n        Opóźnienie transmisji zalezy od szybkości transmisji.\n      </p>\n      <li>Opóźnienie przetwarzania</li>\n      <p>\n        Czas potrzebny na przetworzenie danych przez urządzenie, np procesor,\n        pamięć podręczną, czy kartę sieciową.\n      </p>\n      <li>Opóźnienie kolejkowania</li>\n      <p>\n        Czas potrzebny na oczekiwanie w kolejce do przetwarzania danych przez\n        urządzenie np. router, przełącznik sieciowy czy serwer.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Co to jest Servie Worker i opisz jego funkcje.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Service Worker to technologia stosowana w aplikacjach webowych,\n        umożliwiająca tworzenie procesów w tle, które działają niezależnie od\n        samej strony internetowej i mają zdolność do obsługi zapytań sieciowych\n        oraz zarządzania pamięcią podręczną.\n      </p>\n      <p>Główne funkcje Service Workera to:</p>\n      <li>Obsługa zapytań sieciowych offline</li>\n      <p>\n        Service Worker może przechowywać kopie danych na urządzeniu użytkownika,\n        co pozwala na wyświetlanie treści nawet bez połączenia z siecią.\n      </p>\n      <li>Zarządzanie pamięcią podręczną</li>\n      <p>\n        Dzięki Service Workerowi, aplikacja może przechowywać pewne dane w\n        pamięci podręcznej, co znacznie przyspiesza ładowanie strony i zmniejsza\n        ilość zapytań do serwera.\n      </p>\n      <li>Powiadomienia</li>\n      <p>\n        Service Worker pozwala na wyświetlanie powiadomień użytkownikowi, nawet\n        gdy strona internetowa jest zamknięta.\n      </p>\n      <li>Przetwarzanie tła</li>\n      <p>\n        Service Worker umożliwia wykonywanie operacji w tle, np. synchronizacja\n        danych z serwerem lub aktualizacja aplikacji.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Omów optymalną listę kontrolną progresywnej aplikacji internetowej.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Optymalna lista kontrolna progresywnej aplikacji internetowej (PWA) to\n        zestaw wskazówek i najlepszych praktyk dla twórców aplikacji, którzy\n        chcą zapewnić jak najlepsze wrażenia użytkownikom.\n      </p>\n      <li>Responsywność</li>\n      <p>\n        Strona internetowa powinna być responsywna, co oznacza, że powinna\n        dostosowywać się do różnych rozmiarów ekranów i urządzeń.\n      </p>\n      <li>Dostępność offline</li>\n      <p>\n        PWA powinna umożliwiać korzystanie z aplikacji bez połączenia z\n        internetem, dzięki możliwości przechowywania danych w pamięci\n        podręcznej.\n      </p>\n      <li>Szybkość ładowania</li>\n      <p>\n        Strona internetowa powinna ładować się szybko, co zwiększa szanse na\n        pozyskanie i utrzymanie użytkowników.\n      </p>\n      <li>Użyteczność</li>\n      <p>\n        PWA powinna być intuicyjna w użyciu, a funkcje powinny być łatwo\n        dostępne i zrozumiałe dla użytkowników.\n      </p>\n      <li>Bezpieczeństwo</li>\n      <p>\n        Strona internetowa powinna być zabezpieczona przed atakami, a\n        użytkownicy powinni czuć się bezpiecznie podczas korzystania z\n        aplikacji.\n      </p>\n      <li>Dostępność na urządzeniach mobilnych</li>\n      <p>\n        PWA powinna działać bezproblemowo na różnych urządzeniach mobilnych, a\n        interfejs powinien być zaprojektowany z myślą o użytkownikach\n        korzystających z ekranów dotykowych.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omów wytażenia warunkowe.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Wyrażenia warunkowe to instrukcje programistyczne, które pozwalają na\n        wykonanie pewnych czynności w zależności od spełnienia określonych\n        warunków\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Co to jest przeciążanie metod.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Przeciążanie metod to mechanizm programowania obiektowego, który pozwala\n        na definiowanie wielu metod o tej samej nazwie, ale różniących się listą\n        parametrów.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Czym są ptętle - pętla while i do while.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Pętla \"while\" to instrukcja programistyczna, która wykonuje blok kodu,\n        dopóki określony warunek jest prawdziwy. Warunek jest sprawdzany przed\n        wykonaniem bloku kodu. Jeśli warunek jest fałszywy już na początku, blok\n        kodu nie zostanie wykonany ani razu.\n      </p>\n      <p>\n        Pętla \"do while\" to instrukcja programistyczna, która wykonuje blok kodu\n        przynajmniej raz, a następnie sprawdza, czy warunek jest prawdziwy, aby\n        określić, czy kontynuować wykonanie bloku kodu. Jeśli warunek jest\n        fałszywy, pętla zostanie przerwana.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Podaj Międzynarodowy Standard ISO, który opisuje ISO C++.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        MISO C++ to standard języka programowania C++, który jest opisany przez\n        Międzynarodową Organizację Normalizacyjną (ISO). Standard ten został\n        opublikowany jako ISO/IEC 14882 w 1998 roku, a następnie został\n        zaktualizowany w 2003 roku (ISO/IEC 14882:2003) oraz 2011 roku (ISO/IEC\n        14882:2011).\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Podaj różnicę między operatorem \"==\" a \"='.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Operator \"==\" (równa się) jest operatorem porównania w językach\n        programowania, który zwraca wartość logiczną \"true\" lub \"false\" w\n        zależności od tego, czy dwa wyrażenia są równe sobie. Operator ten jest\n        używany do porównywania wartości, które są przechowywane w zmiennych,\n        obiektach lub wyrażeniach.\n      </p>\n      <p>\n        Operator \"=\" (przypisanie) jest operatorem przypisania, który służy do\n        przypisywania wartości jednej zmiennej lub obiektu do innej zmiennej lub\n        obiektu. Operator ten nie porównuje wartości, ale zamiast tego\n        przypisuje wartość z prawej strony do zmiennej lub obiektu po lewej\n        stronie.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Jakie jest zastosowanie funkcji getchar()?</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        W skrócie, funkcja getchar() jest używana do wczytywania pojedynczych\n        znaków z wejścia standardowego i ma wiele zastosowań w programowaniu, od\n        pobierania danych od użytkownika do przetwarzania plików tekstowych.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wymień i omów planistów w systemie operacyjnym.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Planista czasowy</li>\n      <p>\n        Alokuje procesor na podstawie czasu przydzielonego dla każdego procesu.\n        Zwykle używa się go w systemach czasu rzeczywistego.\n      </p>\n      <li>Planista zdarzeniowy</li>\n      <p>\n        Alokuje procesor na podstawie zdarzeń, takich jak żądania\n        wejścia-wyjścia, wywołania systemowe lub przerwania.\n      </p>\n      <li>Planista priorytetowy</li>\n      <p>\n        Alokuje procesor na podstawie priorytetów procesów. Procesy o wyższym\n        priorytecie mają pierwszeństwo w dostępie do procesora.\n      </p>\n      <li>Planista proporcjonalny</li>\n      <p>\n        Alokuje procesor w sposób proporcjonalny do przypisanych mu udziałów\n        zasobów.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wymień stany procesów systemach operacyjnych Microsoft.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Stan gotowości</li>\n      <p>Proces jest gotowy do wykonania i oczekuje na przydział procesora.</p>\n      <li>Stan wykonywania</li>\n      <p>Proces jest aktualnie wykonywany przez procesor.</p>\n      <li>Stan oczekiwania</li>\n      <p>\n        Proces oczekuje na zasoby lub na wykonanie pewnej operacji, np. oczekuje\n        na zdarzenie wejścia-wyjścia.\n      </p>\n      <li>Stan zawieszenia</li>\n      <p>\n        Proces jest zawieszony, czyli nie jest wykonywany ani nie oczekuje na\n        żadne zasoby.\n      </p>\n      <li>Stan zakończenia</li>\n      <p>Proces zakończył swoje działanie.</p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wymień stany procesów systemów unixowych.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Stan gotowości</li>\n      <p>Proces jest gotowy do wykonania i oczekuje na przydział procesora.</p>\n      <li>Stan wykonywania</li>\n      <p>Proces jest aktualnie wykonywany przez procesor.</p>\n      <li>Stan oczekiwania</li>\n      <p>\n        Proces oczekuje na zasoby lub na wykonanie pewnej operacji, np. oczekuje\n        na zdarzenie wejścia-wyjścia.\n      </p>\n      <li>Stan zatrzymania</li>\n      <p>Proces został zatrzymany i nie wykonuje żadnych operacji.</p>\n      <li>Stan uśpienia</li>\n      <p>\n        Proces został uśpiony i oczekuje na zdarzenie, które spowoduje jego\n        wybudzenie.\n      </p>\n      <li>Stan zombie</li>\n      <p>\n        Proces, który zakończył swoje działanie, ale jeszcze nie został usunięty\n        z systemu.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omów główne typy barw ze względu na skojarzenia.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Barwy ciepłe</li>\n      <p>\n        Czerwień, pomarańcz, żółć. Zwykle kojarzone z energią, namiętnością,\n        pozytywnym nastawieniem, ale też niekiedy z agresją lub ryzykiem.\n      </p>\n      <li>Barwy zimne</li>\n      <p>\n        Niebieski, zielony, fiolet. Często kojarzone z spokojem, harmonią,\n        naturą, ale także z obojętnością lub depresją.\n      </p>\n      <li>Barwy jaskrawe</li>\n      <p>\n        Fiolet, różowy, jaskrawa żółć. Wywołują skojarzenia z radością, zabawą,\n        entuzjazmem, ale też mogą być uciążliwe dla oczu lub wywoływać uczucie\n        chaosu.\n      </p>\n      <li>Barwy pastelowe</li>\n      <p>\n        Jasny róż, błękit, miętowy. Kojarzone z delikatnością, subtelnością,\n        romantyzmem, ale też mogą być uważane za zbyt łagodne lub nudne.\n      </p>\n      <li>Barwy ziemi</li>\n      <p>\n        Brąz, khaki, beż. Często kojarzone z naturą, stabilnością,\n        naturalnością, ale też mogą wywoływać skojarzenia z przestarzałością lub\n        nudą.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Jak działa algorym bulge.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Algorytm Bulge wyróżnia się tym, że pozwala na zmniejszenie liczby\n        operacji potrzebnych do wyznaczenia wartości własnych i wektorów\n        własnych w porównaniu z innymi algorytmami, szczególnie gdy macierz\n        wejściowa ma bardzo dużą liczbę wierszy i kolumn. Algorytm ten\n        wykorzystywany jest w wielu dziedzinach nauki i technologii, w tym w\n        przetwarzaniu sygnałów, analizie danych, fizyce i chemii.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omów modelowanie w grafice 3D.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Proces modelowania polega na tworzeniu kształtu obiektu poprzez\n        dodawanie, usuwanie i modyfikowanie geometrii. Dostępne są różne\n        narzędzia pozwalające na dokładne kształtowanie modelu, w tym narzędzia\n        do rysowania, wycinania, skalowania, obracania, czy dodawania tekstur.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wymień pradygmaty programowania i omów szczegółowo jeden wybrany</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Programowanie imperatywne</li>\n      <p>\n        Program składa się z sekwencji instrukcji, które są wykonywane po kolei.\n        Programista określa kroki, jakie powinien wykonać program, aby osiągnąć\n        pożądany wynik. Podstawową strukturą kontrolną w tym paradygmacie jest\n        instrukcja warunkowa (if) oraz pętla (for, while). Programowanie\n        imperatywne koncentruje się na tym, co program ma zrobić, a nie na tym,\n        jak to zrobić.\n      </p>\n      <li>Programowanie funkcyjne</li>\n      <p>\n        Program składa się z wywoływania funkcji, a nie z sekwencji instrukcji.\n        Funkcje nie zmieniają stanu programu i nie mają efektów ubocznych, tzn.\n        działają tylko na swoich argumentach i zwracają wartość. Programowanie\n        funkcyjne koncentruje się na deklaratywnym opisie problemów, a nie na\n        tym, jak te problemy mają zostać rozwiązane.\n      </p>\n      <li>Programowanie obiektowe</li>\n      <p>\n        Program składa się z obiektów, które mają swoje własności (atrybuty)\n        oraz metody (operacje, które można wykonać na obiekcie). Programowanie\n        obiektowe koncentruje się na modelowaniu świata rzeczywistego poprzez\n        obiekty i relacje między nimi.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wzorzec programowania SOLID.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Zastosowanie zasad SOLID w projektowaniu aplikacji pomaga w tworzeniu\n        elastycznego i łatwego w utrzymaniu kodu, co przekłada się na\n        oszczędność czasu i pieniędzy w dalszej fazie rozwoju aplikacji.\n      </p>\n      <li>Single Responsibility Principle</li>\n      <p>\n        Asada pojedynczej odpowiedzialności: każda klasa powinna mieć tylko\n        jedno, jasno zdefiniowane zadanie. Dzięki temu klasa jest łatwiejsza w\n        utrzymaniu i zmianach.\n      </p>\n      <li>Open-Closed Principle</li>\n      <p>\n        Zasada otwarte-zamknięte: klasy powinny być otwarte na rozszerzenie, ale\n        zamknięte na modyfikację. Zmiana zachowania klasy powinna odbywać się\n        poprzez dziedziczenie i polimorfizm, a nie przez modyfikowanie\n        istniejącego kodu.\n      </p>\n      <li>Liskov Substitution Principle</li>\n      <p>\n        Zasada podstawienia Liskov: obiekt klasy podrzędnej powinien być w\n        stanie zastąpić obiekt klasy nadrzędnej bez zmiany spodziewanego\n        zachowania programu. Innymi słowy, dziedziczenie powinno być używane\n        tylko wtedy, gdy klasy naprawdę mają wspólną cechę i działają w sposób\n        spójny.\n      </p>\n      <li>Interface Segregation Principle</li>\n      <p>\n        Zasada segregacji interfejsów: klienci nie powinni zależeć od\n        interfejsów, których nie potrzebują. Zamiast tego powinny być tworzone\n        bardziej specyficzne interfejsy, które zawierają tylko te metody, które\n        są potrzebne w danym kontekście.\n      </p>\n      <li>Dependency Inversion Principle</li>\n      <p>\n        Zasada odwrócenia zależności: zależności między modułami powinny być\n        oparte na abstrakcjach, a nie na konkretnych implementacjach. Innymi\n        słowy, moduł wyższego poziomu nie powinien zależeć od modułu niższego\n        poziomu, ale od abstrakcji, które zdefiniowały te moduły.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Scharakteryzuj obiekt typu pierwszoklasowego, podaj jego własności.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Obiekt typu pierwszoklasowego to pojęcie z dziedziny programowania\n        obiektowego. Oznacza ono, że w danym języku programowania obiekty są\n        traktowane jak wartości pierwszorzędne, podobnie jak liczby czy ciągi\n        znaków. Oznacza to, że obiekty mogą być przekazywane jako argumenty\n        funkcji, zwracane jako wyniki funkcji, a także przechowywane w\n        zmiennych.\n      </p>\n      <li>Przypisywanie</li>\n      <p>Można przypisać wartość obiektu do zmiennej.</p>\n      <li>Przekazywanie jako argument</li>\n      <p>Można przekazać obiekt jako argument funkcji.</p>\n      <li>Zwracanie</li>\n      <p>Funkcja może zwrócić obiekt jako wynik.</p>\n      <li>Tworzenie dynamiczne</li>\n      <p>Można tworzyć obiekty dynamicznie w trakcie działania programu.</p>\n      <li>Klasa anonimowa</li>\n      <p>\n        Możliwe jest definiowanie obiektów bezpośrednio bez definiowania klasy.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omów cechę oprogramowania : dopuszczalność.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Dopuszczalność to jedna z cech oprogramowania, która oznacza, że program\n        spełnia wymagania określone w danym kontekście, np. zgodność z\n        regulacjami prawno-technicznymi, standardami, politykami organizacji\n        itp. Oprogramowanie dopuszczalne musi być zgodne z wszelkimi wymaganiami\n        formalnymi, które określają, jakie funkcje i cechy powinny być obecne\n        lub nieobecne w programie, jakie formaty danych są akceptowalne, jakie\n        procedury testowania i weryfikacji należy stosować itp.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Wymień cztery podstawowe działalności wspólne dla wszystkich procesów\n        wytwarzania oprogramowania.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Planowanie</li>\n      <p>\n        Określenie celów, zadań i wymagań projektu, a także określenie\n        harmonogramu i budżetu projektu.\n      </p>\n      <li>Analiza</li>\n      <p>\n        Zrozumienie wymagań użytkownika, stworzenie specyfikacji funkcjonalnej,\n        a także określenie ograniczeń projektowych.\n      </p>\n      <li>Projektowanie</li>\n      <p>\n        Tworzenie projektu oprogramowania, takiego jak projekt systemu, projekt\n        interfejsu użytkownika, projekt bazy danych, itp.\n      </p>\n      <li>Implementacja</li>\n      <p>\n        Faktyczne tworzenie i kodowanie oprogramowania, testowanie oraz\n        integracja różnych modułów oprogramowania w całość.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Omów Perspektywę 4+1 - przyporządkuj odpowiednie rodzaje diagramów\n        języka UML\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Perspektywa 4+1 to podejście do modelowania architektury systemu, które\n        składa się z pięciu perspektyw lub widoków, a każda z perspektyw\n        reprezentowana jest przez odpowiedni rodzaj diagramu UML.\n      </p>\n      <li>Widok logiczny</li>\n      <p>\n        Reprezentowany przez diagram klas - opisuje strukturę klas, relacje\n        między nimi i ich zachowanie.\n      </p>\n      <li>Widok procesowy</li>\n      <p>\n        Reprezentowany przez diagramy sekwencji, diagramy aktywności, diagramy\n        stanów - opisuje zachowanie systemu w czasie.\n      </p>\n      <li>Widok fizyczny</li>\n      <p>\n        Reprezentowany przez diagramy komponentów, diagramy wdrożenia - opisuje\n        sposób, w jaki system jest fizycznie zorganizowany i wdrażany.\n      </p>\n      <li>Widok użytkownika</li>\n      <p>\n        Reprezentowany przez diagramy przypadków użycia - opisuje funkcjonalność\n        systemu z perspektywy użytkownika\n      </p>\n      <li>Widok scenariuszy</li>\n      <p>\n        Reprezentowany przez scenariusze - opisuje interakcje między\n        użytkownikami a systemem oraz między różnymi częściami systemu.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Omów elementy, które mają wplyw na postrzeganie obrazów jako wizerunków\n        scen trójwymiarowych.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Perspektywy</li>\n      <p>\n        Kąt widzenia, z którego patrzymy na scenę, wpływa na proporcje obiektów\n        i na ich pozycję względem siebie.\n      </p>\n      <li>Światła</li>\n      <p>\n        Oświetlenie sceny wpływa na kolor i intensywność obiektów, a także na\n        cienie, które rzucane są na tle.\n      </p>\n      <li>Tekstury</li>\n      <p>\n        Detale i faktury obiektów mogą wpływać na to, jak odbieramy ich głębię i\n        trójwymiarowość.\n      </p>\n      <li>Koloru</li>\n      <p>\n        Odpowiednio dobrana kolorystyka obiektów może pomóc w ich percepcji jako\n        trójwymiarowych. Na przykład, ciemniejsze kolory mogą sugerować cienie,\n        a jaśniejsze - odbicia świetlne.\n      </p>\n      <li>Rozdzielczości</li>\n      <p>\n        Im wyższa rozdzielczość obrazu, tym więcej detali i lepsza percepcja\n        głębi.\n      </p>\n      <li>Ruchu</li>\n      <p>\n        Animacje i efekty ruchu mogą pomóc w tworzeniu złudzenia\n        trójwymiarowości.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wskaż różnice między forward raytracing a backward raytracing.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Główną różnicą między forward raytracing a backward raytracing jest to,\n        że pierwsza metoda wysyła promienie światła od źródła do kamery, a druga\n        metoda od kamery do sceny. Forward raytracing jest szybszy i mniej\n        skomplikowany, ale nie daje tak realistycznych efektów, jak backward\n        raytracing, który jest bardziej czasochłonny, ale daje bardziej\n        realistyczne wyniki.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omów współrzędne sferyczne w grafice komputerowej.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Współrzędne sferyczne to sposób określenia położenia punktu w\n        trójwymiarowej przestrzeni, w którym używane są trzy wartości: promień\n        r, kąt azymutu θ (mierzony od osi x w płaszczyźnie xy) oraz kąt elewacji\n        φ (mierzony od osi z).\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Podaj cztery warunki bezpieczeństwa systemu komputerowego.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Autoryzacja i uwierzytelnienie użytkowników</li>\n      <p>\n        By mieć dostęp do systemu, użytkownik musi zostać uwierzytelniony, a\n        następnie autoryzowany, aby uzyskać dostęp do określonych zasobów.\n      </p>\n      <li>Ochrona przed zagrożeniami zewnętrznymi</li>\n      <p>\n        System musi być chroniony przed atakami z zewnątrz, takimi jak hakerzy,\n        wirusy, złośliwe oprogramowanie, ataki DoS itp.\n      </p>\n      <li>Kontrola dostępu</li>\n      <p>\n        System musi umożliwiać określenie, kto ma dostęp do różnych zasobów,\n        jakie działania są dozwolone i w jaki sposób mają być realizowane.\n      </p>\n      <li>Ciągła aktualizacja i monitorowanie</li>\n      <p>\n        System musi być aktualizowany, aby uwzględniać nowe zagrożenia, a także\n        monitorowany w celu wykrywania i usuwania potencjalnych zagrożeń oraz\n        reagowania na nie w sposób szybki i skuteczny.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Scharakteryzuj działanie IDS.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        IDS to skrót od Intrusion Detection System, czyli systemu wykrywania\n        włamań. Jest to rodzaj oprogramowania lub sprzętu, którego celem jest\n        monitorowanie systemu komputerowego w celu wykrycia i reagowania na\n        próby nieautoryzowanego dostępu lub ataku. IDS działa na zasadzie\n        analizy ruchu sieciowego oraz zachowań systemowych, a jego zadaniem jest\n        wykrycie podejrzanych zdarzeń oraz powiadomienie administratora o tym\n        fakcie\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Omow rolę API w bezpieczeństwie sieci i systemów teleinformatycznych.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Przede wszystkim umożliwiają one dostęp do funkcjonalności zewnętrznych\n        systemów, usług i aplikacji, co może być wykorzystane do zwiększenia\n        bezpieczeństwa poprzez integrację z narzędziami monitorującymi,\n        systemami zarządzania tożsamością, firewallami czy systemami wykrywania\n        ataków.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Omów nieprzenośność programów między różnymi procesorami lub\n        niewykorzystywanie przez aplikacje wszystkich możliwości procesora.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Nieprzenośność programów między różnymi procesorami lub\n        niewykorzystywanie przez aplikacje wszystkich możliwości procesora\n        wynika z różnic w architekturze procesorów i sposobie działania\n        poszczególnych instrukcji. W praktyce oznacza to, że programy pisane dla\n        jednej platformy sprzętowej mogą nie działać na innej platformie, a\n        nawet jeśli działają, to mogą działać wolniej lub nie wykorzystywać\n        wszystkich możliwości procesora.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Co to jest chmura natywna?</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Chmura natywna to koncepcja, w której aplikacje są tworzone i wdrażane z\n        myślą o środowisku chmurowym, wykorzystując do tego celu narzędzia i\n        usługi oferowane przez dostawców chmury publicznej. W odróżnieniu od\n        tradycyjnych aplikacji, które są projektowane do działania w konkretnym\n        środowisku, aplikacje natywne chmury są elastyczne, skalowalne i mogą\n        działać w różnych chmurach. W ten sposób zapewniają one większą\n        wydajność, dostępność i niezawodność w porównaniu do tradycyjnych\n        aplikacji\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Co to jest asocjacja?</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        W programowaniu obiektowym, asocjacja to relacja między dwoma klasami,\n        która określa, że jedna klasa ma powiązania z obiektami z drugiej klasy.\n        Asocjacja może być jednostronna lub obustronna, a także może mieć\n        atrybuty i operacje. Może też posiadać kierunek, który określa, która\n        klasa jest \"właścicielem\" relacji, a która jest \"podrzędną\". Asocjacje\n        są ważnym narzędziem w projektowaniu obiektowym, pozwalającym na\n        wyrażenie zależności między klasami i modelowanie rzeczywistych\n        sytuacji.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omów znaczenie wartości progowej w procesie decyzyjnym.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Wartość progowa to wartość graniczna, która decyduje o podjęciu\n        konkretnej decyzji. W procesie decyzyjnym wartość progowa jest stosowana\n        do porównywania wyników lub wskaźników z ustalonym poziomem akceptacji\n        lub odrzucenia. Jeśli wynik lub wskaźnik przekracza wartość progową,\n        podejmowana jest jedna decyzja, a jeśli nie, podejmowana jest inna\n        decyzja.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omów kategorie decyzji wedlug stopnia ryzyka?</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>Decyzje według stopnia ryzyka dzielimy na:</p>\n      <li>Decyzje pewne</li>\n      <p>\n        Decyzje, które podejmujemy w oparciu o fakt, że znamy wszystkie możliwe\n        wyniki i ich konsekwencje. W takim przypadku podejmujemy decyzje bez\n        wahania, ponieważ jesteśmy pewni, że podjęcie określonego działania\n        przyniesie oczekiwane skutki.\n      </p>\n      <li>Decyzje ryzykowne</li>\n      <p>\n        Decyzje, które podejmujemy w warunkach niepewności, gdzie nie znamy\n        wszystkich możliwych wyników. W takim przypadku, podjęcie określonej\n        decyzji wiąże się z ryzykiem. W celu zminimalizowania ryzyka, należy\n        dokładnie przeanalizować dostępne opcje i oszacować ich konsekwencje.\n      </p>\n      <li>Decyzje niepewne</li>\n      <p>\n        Decyzje, które podejmujemy w warunkach braku wiedzy lub informacji. W\n        takim przypadku podejmujemy decyzję na podstawie domysłów lub intuicji,\n        ponieważ nie posiadamy wystarczającej ilości informacji, aby dokonać\n        racjonalnej analizy sytuacji. W takim przypadku, podjęcie decyzji wiąże\n        się z dużym ryzykiem i zawsze istnieje szansa na niepowodzenie.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Podaj dwa konkretne przyklady (nie tylko dziedziny) zastosowań systemów\n        wbudowanych.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Urządzenia AGD</li>\n      <p>\n        Systemy wbudowane znajdują zastosowanie w urządzeniach AGD, takich jak\n        pralki, lodówki, kuchenki mikrofalowe, które sterowane są przy pomocy\n        mikrokontrolerów. Dzięki temu można zautomatyzować procesy, poprawić\n        wydajność i bezpieczeństwo urządzeń.\n      </p>\n      <li>Motoryzacja</li>\n      <p>\n        Systemy wbudowane znajdują szerokie zastosowanie w motoryzacji, np. w\n        samochodach. Kontrolują one wiele funkcji, takich jak sterowanie\n        silnikiem, hamulcami, systemem audio i nawigacją. Systemy te są również\n        odpowiedzialne za bezpieczeństwo, np. poprzez systemy ABS czy ESP.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Jakie dwa rodzaje połączeń ze światem zewnętrznym (i rodzaje\n        odpowiadających im sygnałów) sa charakterystyczne dla komputerowych\n        systemów wbudowanych?\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Wejścia/wyjścia cyfrowe</li>\n      <p>\n        (GPIO) służą do komunikacji z urządzeniami i czujnikami, które generują\n        sygnały cyfrowe, takie jak przyciski, diody, enkodery itp. GPIO może\n        działać w trybie wejścia, wyjścia lub wejścia/wyjścia.\n      </p>\n      <li>Interfejsy analogowo-cyfrowe (ADC) i cyfrowo-analogowe (DAC)</li>\n      <p>\n        Umożliwiają przetwarzanie sygnałów analogowych na sygnały cyfrowe i na\n        odwrót. ADC służy do konwersji sygnałów analogowych (takich jak\n        napięcie, temperatura, ciśnienie) na sygnały cyfrowe, które mogą być\n        przetwarzane przez mikrokontroler. DAC z kolei służy do konwersji\n        sygnałów cyfrowych na sygnały analogowe, takie jak np. sygnał audio.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Do czego służy magistrala komputera?</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Magistrala komputera to połączenie kilku linii przesyłających informacje\n        między różnymi urządzeniami w komputerze. Służy ona do przesyłania\n        danych pomiędzy różnymi podzespołami komputera, takimi jak procesor,\n        pamięć, karta graficzna, dysk twardy czy inne urządzenia\n        wejścia/wyjścia. Magistrala umożliwia szybki transfer danych wewnątrz\n        komputera, co jest kluczowe dla sprawnego działania systemu. Bez\n        magistrali, urządzenia w komputerze nie byłyby w stanie ze sobą\n        komunikować, co uniemożliwiłoby wykonywanie zadań przez system.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wymienić podstawowe elementy skladowe procesora.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Jednostka arytmetyczno-logiczna (ALU)</li>\n      <p>wykonuje operacje arytmetyczne i logiczne na danych,</p>\n      <li>rejestr instrukcji</li>\n      <p>przechowuje aktualnie wykonywaną instrukcję,</p>\n      <li>rejestr licznika instrukcji</li>\n      <p>\n        zawiera adres pamięci, z którego pobierana jest następna instrukcja,\n      </p>\n      <li>rejestry ogólnego przeznaczenia</li>\n      <p>przechowują dane tymczasowo używane przez procesor,</p>\n      <li>kontroler przerwań</li>\n      <p>\n        odpowiada za obsługę przerwań zewnętrznych (np. od urządzeń\n        peryferyjnych),\n      </p>\n      <li>jednostka zarządzania pamięcią</li>\n      <p>zarządza operacjami odczytu i zapisu do pamięci,</p>\n      <li>jednostka zarządzania wejściami/wyjściami</li>\n      <p>obsługuje komunikację z urządzeniami peryferyjnymi.</p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Jakie są podstawowe kategorie rozkazów procesora?</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Rozkazy transferu danych</li>\n      <p>np. kopiowanie, przesyłanie danych)</p>\n      <li>Rozkazy arytmetyczno-logiczne</li>\n      <p>(np. dodawanie, mnożenie, porównanie)</p>\n      <li>Rozkazy skoku</li>\n      <p>(np. warunkowy lub bezwarunkowy skok do innej części programu)</p>\n      <li>Rozkazy wejścia/wyjścia</li>\n      <p>\n        (np. przesyłanie danych z/do pamięci zewnętrznej lub urządzeń\n        wejścia/wyjścia)\n      </p>\n      <li>Rozkazy sterujące</li>\n      <p>(np. resetowanie procesora, zmiana trybu działania)</p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Na czym polega rekursja w wywoływaniu funkcji?</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Rekursja to technika programowania, która polega na wywoływaniu funkcji\n        samej w sobie. W czasie wykonywania programu, gdy funkcja jest\n        wywoływana, może ona sama wywołać siebie, co prowadzi do kolejnego\n        wywołania, aż do osiągnięcia określonego warunku końcowego. Warunek\n        końcowy jest ważny, ponieważ zapobiega nieskończonemu wywoływaniu\n        funkcji i prowadzi do powrotu wartości zwracanej przez funkcję na wyższy\n        poziom. Przykładem zastosowania rekursji może być np. obliczanie silni,\n        sumy ciągu lub drzewa binarnego.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Co to jest Abstrakcyjny Typ Danych (ADT)?</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Abstrakcyjny Typ Danych (ADT) to model matematyczny lub konceptualny,\n        który opisuje zbiór danych i operacji, które można wykonywać na tych\n        danych. ADT ukrywa implementację danych, skupiając się na ich\n        funkcjonalności i zachowaniu. Jest to ważne narzędzie programistyczne,\n        które umożliwia tworzenie skomplikowanych struktur danych, a\n        jednocześnie ułatwia ich użytkowanie i zapewnia izolację od pozostałych\n        elementów programu.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Co to jest struktura danych?</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Wyszukiwanie binarne to algorytm służący do odnalezienia wartości w\n        uporządkowanej tablicy. Polega na porównywaniu szukanej wartości z\n        wartością środkowego elementu tablicy, a następnie porównywaniu z\n        połowami tablicy, aż do odnalezienia szukanej wartości lub stwierdzenia,\n        że nie występuje w tablicy. Dzięki temu algorytmowi można znacznie\n        przyspieszyć proces wyszukiwania, szczególnie dla dużych zbiorów danych.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Definicje, rola, zadania systemu operacyjnego. Kryteria klasyfikacyjne\n        systemów operacyjnych.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        System operacyjny to podstawowe oprogramowanie, które zarządza zasobami\n        sprzętowymi i pozwala użytkownikom na wykonywanie zadań. System\n        operacyjny pełni kilka ról, m.in. zapewnia interfejs użytkownika,\n        zarządza pamięcią, plikami, wejściami/wyjściami oraz wykonuje rozkazy.\n      </p>\n      <p>Zadania systemu operacyjnego to m.in.:</p>\n      <li>\n        zarządzanie pamięcią, plikami, procesami, urządzeniami wejścia/wyjścia;\n      </li>\n      <li>obsługa zdarzeń i błędów;</li>\n      <li>optymalizacja wykorzystania zasobów sprzętowych;</li>\n      <li>zapewnienie bezpieczeństwa i poufności danych;</li>\n      <li>\n        udostępnianie interfejsów programistycznych (API) dla twórców aplikacji.\n      </li>\n      <p>Kryteria klasyfikacyjne systemów operacyjnych to m.in.:</p>\n      <li>tryb pracy systemu (jeden lub kilka trybów);</li>\n      <li>rodzaj zarządzania procesami (procesy jedno- lub wielozadaniowe);</li>\n      <li>model pamięci (jeden lub wieloprogramowy);</li>\n      <li>stopień zdecentralizowania (monolityczny, mikrojądro, hybrydowy);</li>\n      <li>rodzaj systemu plików (lokalny, sieciowy);</li>\n      <li>\n        typ architektury sprzętowej (komputer osobisty, serwer, system\n        wbudowany).\n      </li>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Założenia architektury Johna von Neumanna.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Jednolitą pamięć dla danych i programów.</li>\n      <li>Procesor wykonujący sekwencyjnie instrukcje pobierane z pamięci.</li>\n      <li>\n        Zastosowanie skończonej liczby prostych instrukcji, które mogą wykonywać\n        operacje arytmetyczne, logiczne oraz operacje wejścia/wyjścia.\n      </li>\n      <li>\n        Zastosowanie jednolitego systemu adresacji, który pozwala na odwoływanie\n        się do dowolnej komórki pamięci za pomocą jednej liczby (adresu).\n      </li>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Zarządzanie pamięcią operacyjną. Pamięć wirtualna</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Zarządzanie pamięcią operacyjną to proces, w którym system operacyjny\n        zarządza pamięcią RAM w celu efektywnego alokowania, dealokowania i\n        udostępniania pamięci dla programów. System operacyjny używa pamięci\n        operacyjnej do przechowywania programów i danych, które są aktualnie\n        wykonywane.\n      </p>\n      <p>\n        Pamięć wirtualna to technika zarządzania pamięcią operacyjną, która\n        umożliwia programom używanie więcej pamięci, niż jest fizycznie dostępne\n        w RAM. Pamięć wirtualna tworzy wirtualny adres pamięci, który mapowany\n        jest na fizyczny adres pamięci, kiedy dany fragment pamięci jest\n        potrzebny. Dzięki temu programy mają dostęp do większej ilości pamięci\n        niż jest faktycznie dostępne w pamięci RAM. System operacyjny kontroluje\n        ten proces mapowania, aby zapewnić, że programy nie korzystają z\n        pamięci, która jest już zajęta lub nieprzydzielona.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Planowanie przydziału procesora -szeregowanie zadań.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Planowanie przydziału procesora (ang. CPU scheduling) to proces\n        decydujący o przydziale czasu procesora dla zadań w systemie\n        operacyjnym. Jednym z podejść jest szeregowanie zadań, czyli ustalanie\n        kolejności wykonywania zadań w kolejce.\n      </p>\n      <p>\n        Szeregowanie zadań to proces, w którym system operacyjny wybiera\n        kolejność wykonywania zadań, aby zapewnić, że wszystkie zadania są\n        wykonywane w odpowiednim czasie. System operacyjny używa szeregowania\n        zadań do zarządzania procesorami w celu zapewnienia, że programy są\n        wykonywane w odpowiednim czasie.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Przetwarzanie wspólbieżne i synchronizacja procesów.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Przetwarzanie współbieżne to technika przetwarzania danych, w której\n        wiele zadań wykonywanych jest jednocześnie, a procesy komunikują się ze\n        sobą i koordynują swoje działania. W celu zapewnienia poprawności\n        przetwarzania, konieczna jest synchronizacja procesów, czyli koordynacja\n        ich wykonywania tak, aby uniknąć niepożądanych efektów, takich jak\n        wyścigi (ang. race conditions) czy zakleszczenia (ang. deadlock).\n      </p>\n      <p>\n        Synchronizacja procesów polega na stosowaniu technik, które zapewniają\n        poprawne wykonywanie zadań przez procesy. Do najważniejszych technik\n        należą semafory, muteksy, zmienne warunkowe, a także algorytmy\n        wzajemnego wykluczania, takie jak algorytm Petersona czy Dekkera. Celem\n        synchronizacji procesów jest zapewnienie spójności danych i uniknięcie\n        konfliktów między procesami, a także efektywne wykorzystanie zasobów\n        systemowych.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Wymień podział języków programowania na trzy stopnie. Wyjaśnij też\n        pojęcia translacja, kompilacja, interpretacja.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Języki niskiego poziomu</li>\n      <p>\n        Są bliskie językowi maszynowemu i umożliwiają bezpośrednie wykorzystanie\n        zasobów komputera.\n      </p>\n      <li>Języki średniego poziomu</li>\n      <p>\n        Stanowią połączenie między językami niskiego i wysokiego poziomu.\n        Umożliwiają one programowanie na niższym poziomie abstrakcji niż języki\n        wysokiego poziomu, ale jednocześnie są łatwiejsze w użyciu niż języki\n        niskiego poziomu.\n      </p>\n      <li>Języki wysokiego poziomu</li>\n      <p>\n        Są najbardziej abstrakcyjne i pozwalają na pisanie kodu w sposób\n        bardziej zrozumiały dla człowieka. Zazwyczaj są one łatwiejsze w użyciu\n        niż języki niskiego i średniego poziomu, ale jednocześnie mogą być mniej\n        wydajne.\n      </p>\n      <li>Translacja</li>\n      <p>\n        Proces przekształcania kodu źródłowego napisanego w jednym języku\n        programowania na kod wynikowy w innym języku programowania.\n      </p>\n      <li>Kompilacja</li>\n      <p>\n        Proces przekształcania kodu źródłowego napisanego w języku programowania\n        na kod maszynowy, który jest bezpośrednio wykonywany przez komputer.\n      </p>\n      <li>Interpretacja</li>\n      <p>\n        Proces bezpośredniego wykonywania kodu źródłowego programu przez\n        interpreter. Interpreter przetwarza kod źródłowy na bieżąco i wykonuje\n        go, zamiast kompilować kod na etapie przed uruchomieniem.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Pojęcie programowania. Etapy programowania proceduralnego.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Programowanie to proces tworzenia programów komputerowych, czyli zbiór\n        instrukcji i procedur wykonujących określone zadania.\n      </p>\n      <p>Etapy programowania proceduralnego:</p>\n      <li>Analiza problemu</li>\n      <p>\n        Polega na zrozumieniu, co ma zrobić program, jakie są wymagania, jakie\n        dane wejściowe i wyjściowe są potrzebne itp.\n      </p>\n      <li>Projektowanie</li>\n      <p>\n        Na tym etapie projektuje się algorytmy i struktury danych, które zostaną\n        użyte w programie, aby spełnić wymagania.\n      </p>\n      <li>Kodowanie</li>\n      <p>Implementacja algorytmów i struktur danych w języku programowania.</p>\n      <li>Testowanie</li>\n      <p>\n        Sprawdzenie, czy program działa poprawnie, czy generuje oczekiwane\n        wyniki, czy obsługuje wszelkie możliwe przypadki.\n      </p>\n      <li>Wdrażanie</li>\n      <p>Instalacja programu i dostarczenie go użytkownikowi.</p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Przekazywanie argumentów do funkcji w C++</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Przekazywanie argumentów do funkcji w C++ odbywa się przez wartość,\n        wskaźnik lub referencję. Przekazywanie przez wartość powoduje utworzenie\n        kopii argumentu, która jest przekazywana do funkcji. Przekazywanie przez\n        wskaźnik powoduje przekazanie adresu argumentu do funkcji, co pozwala na\n        modyfikowanie wartości argumentu w funkcji. Przekazywanie przez\n        referencję to inny sposób przekazywania argumentów przez odwołanie się\n        do oryginalnego argumentu, co pozwala na modyfikację wartości argumentu\n        bez tworzenia jego kopii.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Wymień kolejne techniki programowania.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Programowanie strukturalne</li>\n      <p>\n        opiera się na stosowaniu strukturalnych metod projektowania i\n        programowania.\n      </p>\n      <li>Programowanie obiektowe</li>\n      <p>\n        opiera się na idei tworzenia obiektów, które są instancjami klas i mają\n        określone właściwości i metody.\n      </p>\n      <li>Programowanie funkcyjne</li>\n      <p>\n        opiera się na wykorzystaniu funkcji jako podstawowej jednostki\n        programowej, wraz z zapewnieniem odpowiedniego sposobu przekazywania\n        argumentów i wyników.\n      </p>\n      <li>Programowanie zdarzeniowe</li>\n      <p>\n        opiera się na obsłudze zdarzeń, które mogą być generowane przez\n        użytkownika, system lub inne aplikacje.\n      </p>\n      <li>Programowanie reaktywne</li>\n      <p>\n        opiera się na reakcjach na zmiany stanu aplikacji, zamiast na\n        sekwencyjnym przetwarzaniu instrukcji.\n      </p>\n      <li>Programowanie współbieżne</li>\n      <p>\n        opiera się na równoczesnym wykonywaniu wielu wątków lub procesów, w celu\n        zwiększenia wydajności i responsywności systemu.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Podstawowe zasady OOP (Object Oriented Programming).</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Abstrakcja</li>\n      <p>\n        umożliwia ukrycie szczegółów implementacji i skupienie się na istotnych\n        aspektach obiektów.\n      </p>\n      <li>Dziedziczenie</li>\n      <p>\n        umożliwia tworzenie hierarchii klas i dziedziczenie właściwości i metod\n        po klasach nadrzędnych.\n      </p>\n      <li>Enkapsulacja</li>\n      <p>\n        umożliwia wielokrotne wykorzystanie kodu poprzez zastosowanie różnych\n        implementacji dla tych samych metod w różnych klasach.\n      </p>\n      <li>Polimorfizm</li>\n      <p>\n        umożliwia ukrycie danych i metod wewnątrz klasy i zezwala na dostęp do\n        nich tylko poprzez odpowiednie interfejsy.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Klasy, obiekty. Formalna składnia definiowania klasy.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Klasa to szablon lub wzorzec, na podstawie którego tworzone są konkretne\n        obiekty. Obiekt to instancja klasy, która ma swoje własne cechy (pola) i\n        zachowania (metody).\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>WKonstruktory, destruktory i ich zadania.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Konstruktor</li>\n      <p>\n        metoda wywoływana podczas tworzenia nowego obiektu danej klasy. Jego\n        zadaniem jest przygotowanie obiektu do dalszego działania i\n        inicjalizacja pól obiektu, np. ustalenie początkowych wartości pól.\n      </p>\n      <li>Destruktor</li>\n      <p>\n        metoda wywoływana automatycznie, gdy obiekt danej klasy jest usuwany z\n        pamięci. Jego zadaniem jest zwolnienie zasobów zajmowanych przez obiekt,\n        takich jak pamięć dynamiczna czy otwarte pliki. W C++ destruktor ma\n        nazwę taką samą jak nazwa klasy, poprzedzoną znakiem tyldy (~).\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Operatory odwołania do składowych obiektu. Podać przyklady.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Operator odwołania do składowych obiektu w języku C++ to operator \"->\",\n        który służy do dostępu do składowych obiektu poprzez wskaźnik na ten\n        obiekt. Przykład użycia operatora \"->\" to np. dostęp do pola \"age\"\n        obiektu klasy Person poprzez wskaźnik na ten obiekt:\n      </p>\n      <code>Person *personPtr = new Person(); personPtr->age = 30;</code>\n      <p>w innych językach uywa się np obiek.nazwa_zmiennej</p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Omówić platforme NET Framework. Czy .NET Framework jest związana z\n        konkretnym językiem programowania?\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        .NET Framework to platforma programistyczna opracowana przez firmę\n        Microsoft. Zapewnia narzędzia i biblioteki programistyczne do tworzenia\n        aplikacji na systemy Windows. Platforma .NET Framework składa się z\n        ogólnego środowiska uruchomieniowego (Common Language Runtime - CLR),\n        które obsługuje kompilację kodu do języka pośredniego (IL - Intermediate\n        Language) oraz obsługuje zarządzanie pamięcią, wątkami, bezpieczeństwem\n        i innymi kwestiami systemowymi.\n      </p>\n      <p>\n        Platforma .NET Framework jest niezależna od języka programowania, co\n        oznacza, że można pisać kod w różnych językach, takich jak C#, Visual\n        Basic.NET, F#, C++/CLI czy IronPython, a następnie ten kod może być\n        uruchomiony w środowisku CLR. Dlatego .NET Framework jest nazywany\n        platformą wielojęzykową.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Co oznacza akronim RAD? Podać przykłady środowisk RAD.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Akronim RAD oznacza Rapid Application Development, czyli metodę\n        szybkiego tworzenia aplikacji. Metoda ta zakłada szybkie tworzenie\n        prototypów, iteracyjne testowanie i udzielanie szybkiej odpowiedzi na\n        zmiany.\n      </p>\n      <p>Przykładowe środowiska RAD to:</p>\n      <li>Microsoft Visual Studio</li>\n      <li>Xcode</li>\n      <li>IntelliJ IDEA</li>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Przykładowe problemy optymalizacyjne w zagadnieniach programowania\n        liniowego. Metoda Simpleks.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Problemy alokacji zasobów</li>\n      <p>\n        jak zoptymalizować alokację surowców lub kosztów pracy, tak aby osiągnąć\n        maksymalny zysk lub minimalny koszt.\n      </p>\n      <li>Problemy transportowe</li>\n      <p>\n        jak zoptymalizować koszty transportu, tak aby produkty dotarły do celu w\n        minimalnym czasie i przy minimalnych kosztach.\n      </p>\n      <li>Problemy produkcji:</li>\n      <p>\n        jak zoptymalizować proces produkcyjny, tak aby zminimalizować koszty\n        produkcji i zwiększyć zyski.\n      </p>\n      <p>\n        Metoda Simpleks to jedna z najczęściej stosowanych metod rozwiązywania\n        problemów programowania liniowego. Polega na iteracyjnym przeszukiwaniu\n        wierzchołków wielościanu, który jest ograniczony przez nierówności. W\n        każdej iteracji algorytm wybiera kolejny wierzchołek, który ma lepszą\n        wartość funkcji celu i porusza się w kierunku wierzchołka, który daje\n        lepsze wyniki. Proces kończy się, gdy nie ma już wierzchołków dających\n        lepsze wyniki, co oznacza, że zostało znalezione rozwiązanie optymalne.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Omówić możliwości narzędzia Solver arkusza kalkulacyjnego Excel</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Solver to narzędzie dostępne w arkuszu kalkulacyjnym Excel, służące do\n        rozwiązywania problemów optymalizacyjnych. Możliwe do rozwiązania\n        problemy obejmują optymalizację liniową, nieliniową, dyskretną oraz z\n        ograniczeniami równościowymi lub nierównościowymi. Solver wykorzystuje\n        algorytm Simpleksa do znalezienia optymalnego rozwiązania. Użytkownik\n        może zdefiniować cel optymalizacji, zmienne decyzyjne, ograniczenia i\n        inne parametry, a Solver wyznaczy wartości zmiennych decyzyjnych, które\n        optymalizują cel. Solver jest przydatny w wielu dziedzinach, w tym w\n        biznesie, finansach, inżynierii i naukach społecznych.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>omów Problem komiwojażera</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Problem komiwojażera (ang. Traveling Salesman Problem, TSP) jest jednym\n        z klasycznych problemów optymalizacyjnych w informatyce. Polega on na\n        znalezieniu najkrótszej drogi przechodzącej przez wszystkie wierzchołki\n        w pełnym grafie ważonym, tak aby każdy wierzchołek był odwiedzony\n        dokładnie raz i zakończyła się wierzchołkiem startowym\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Algorytm, cechy algorytmu, struktury sterujące przebiegiem algorytmu,\n        schemat blokowy.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Algorytm to skończony zestaw precyzyjnych instrukcji krok po kroku,\n        które pozwalają na rozwiązanie określonego problemu lub zadania.\n        Algorytm powinien mieć określone cechy, takie jak precyzyjność,\n        wykonywalność, skończoność i determinizm.\n      </p>\n      <p>\n        Struktury sterujące przebiegiem algorytmu to elementy, które pozwalają\n        na wykonywanie określonych działań w zależności od określonych warunków.\n        Wyróżniamy między innymi instrukcje warunkowe (if, switch), pętle\n        (while, for, do-while), instrukcje skoku (break, continue, return) oraz\n        funkcje.\n      </p>\n      <p>\n        Schemat blokowy to graficzne przedstawienie algorytmu, w którym\n        poszczególne instrukcje są zapisane jako bloki o określonych kształtach,\n        połączone strzałkami wskazującymi na kolejność wykonywania instrukcji.\n        Schemat blokowy pozwala na łatwiejsze zrozumienie algorytmu i jego\n        przebiegu, a także na łatwiejsze wprowadzenie ewentualnych zmian czy\n        modyfikacji.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>omów Złożoność obliczeniowa algorytmu</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Złożoność obliczeniowa algorytmu to miara, która określa, jak szybko\n        rośnie czas wykonania algorytmu wraz z rozmiarem problemu. Czas ten jest\n        zwykle mierzony w liczbie operacji elementarnych, które muszą zostać\n        wykonane przez algorytm.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Przykładowe algorytmy sortujące. Porównanie ich złożoności czasowej.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Sortowanie bąbelkowe (Bubble sort)</li>\n      <p>\n        porównuje sąsiednie elementy i zamienia je, jeśli nie są w kolejności.\n        Ma złożoność O(n^2) i jest stosunkowo wolny dla większych zbiorów\n        danych.\n      </p>\n      <li>Sortowanie przez wstawianie (Insertion sort)</li>\n      <p>\n        przechodzi przez każdy element i umieszcza go w odpowiedniej pozycji w\n        posortowanej już części tablicy. Ma złożoność O(n^2) i działa szybciej\n        niż sortowanie bąbelkowe.\n      </p>\n      <li>Sortowanie szybkie (Quick sort)</li>\n      <p>\n        wybiera jeden element jako punkt odniesienia (tzw. pivot), porównuje\n        pozostałe elementy z pivotem i umieszcza je po odpowiedniej stronie.\n        Następnie wykonuje ten sam proces dla obu połówek tablicy. Ma złożoność\n        O(n log n) i działa szybko dla większych zbiorów danych.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Przykładowe dynamiczne struktury danych.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Lista</li>\n      <p>\n        struktura umożliwiająca przechowywanie danych w postaci ciągu elementów,\n        które są połączone ze sobą wskaźnikami.\n      </p>\n      <li>Stos</li>\n      <p>\n        struktura LIFO (Last-In-First-Out), w której nowe elementy dodawane są\n        na wierzch, a usuwanie elementów odbywa się również od wierzchu.\n      </p>\n      <li>Kolejka</li>\n      <p>\n        struktura FIFO (First-In-First-Out), w której nowe elementy dodawane są\n        na końcu, a usuwanie elementów odbywa się z początku.\n      </p>\n      <li>Drzewo</li>\n      <p>\n        struktura, w której każdy element ma jednego lub więcej potomków,\n        tworząc drzewiastą strukturę.\n      </p>\n      <li>Graf</li>\n      <p>\n        struktura, w której elementy są połączone ze sobą krawędziami, tworząc\n        graficzny model.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Dane, informacje, przetwarzanie danych, przetwarzanie informacji..\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Dane to nieprzetworzone informacje, które posiadają pewną wartość i\n        znaczenie. Przetwarzanie danych to operacje wykonywane na danych, które\n        zmieniają ich postać, organizację lub zawartość, aby uzyskać bardziej\n        wartościowe informacje. Przetwarzanie informacji natomiast to\n        wykorzystywanie uzyskanych informacji w celu podejmowania decyzji lub\n        podejmowania działań.\n      </p>\n      <p>\n        Przetwarzanie danych jest procesem transformacji danych w informacje, a\n        przetwarzanie informacji jest procesem transformacji informacji w\n        wiedzę, co pozwala na podejmowanie decyzji lub realizowanie działań.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Podstawowe założenie ilościowej teorii informacji. Jednostka informacji.\n        Entropia informacyjna.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Podstawowe założenie ilościowej teorii informacji mówi, że informacja\n        jest związana z redukcją niepewności lub entropii. Teoria informacji\n        bada sposób, w jaki przekazywana jest informacja, w jaki sposób\n        informacja jest kodowana, przetwarzana, przesyłana i odbierana.\n        Jednostką informacji jest bit, który może przyjąć dwie wartości: 0 lub\n        1. Entropia informacyjna to miara informacji zawartej w danym zbiorze\n        lub źródle informacji. Im większa entropia, tym większa niepewność co do\n        treści informacji, a tym samym większa ilość informacji zawarta w tym\n        źródle. Entropia może być wykorzystywana do określania efektywności\n        kodowania informacji, gdzie im mniejsza entropia, tym mniej bitów\n        potrzebnych do reprezentowania informacji.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Dwuznakowe kodowanie komunikatów. Średnia długość słowa kodowego.\n        Pojęcie i znaczenie redundancji sposobu kodowania. Kod zwarty.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Dwuznakowe kodowanie komunikatów to sposób kodowania informacji, w\n        którym każdy symbol jest kodowany za pomocą sekwencji dwóch znaków (np.\n        \"0\" i \"1\"). Średnia długość słowa kodowego w tym kodowaniu zależy od\n        prawdopodobieństwa wystąpienia danego symbolu - im mniejsze\n        prawdopodobieństwo, tym dłuższa sekwencja dwuznakowa potrzebna jest do\n        zakodowania symbolu.\n      </p>\n      <p>\n        Dwuznakowe kodowanie komunikatów to sposób kodowania informacji, w\n        którym każdy symbol jest kodowany za pomocą sekwencji dwóch znaków (np.\n        \"0\" i \"1\"). Średnia długość słowa kodowego w tym kodowaniu zależy od\n        prawdopodobieństwa wystąpienia danego symbolu - im mniejsze\n        prawdopodobieństwo, tym dłuższa sekwencja dwuznakowa potrzebna jest do\n        zakodowania symbolu. Entropia informacyjna to teoretyczna dolna granica\n        średniej długości słowa kodowego, która jest osiągana przy optymalnym\n        kodowaniu z zachowaniem odpowiedniego prawdopodobieństwa wystąpienia\n        symboli.\n      </p>\n      <p>\n        Redundancja sposobu kodowania oznacza, że w kodowaniu używa się więcej\n        znaków, niż jest to konieczne do zakodowania informacji. Kod zwarty to\n        taki kod, w którym nie ma redundancji i jest optymalny w sensie\n        minimalnej średniej długości słowa kodowego.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Arytmetyka binama. Uzupełnienia i odejmowanie przy pomocy uzupelnień.\n        Definicje kodów liczb.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Arytmetyka binarn</li>\n      <p>\n        system matematyczny, który operuje na liczbach zapisanych w systemie\n        dwójkowym. W tym systemie posługujemy się jedynie dwoma cyframi: 0 i 1.\n        W arytmetyce binarnej stosuje się uzupełnienia, czyli metody\n        reprezentowania liczb ujemnych.\n      </p>\n      <p>\n        Uzupełnienie do dwóch to najprostszy sposób reprezentacji liczb\n        ujemnych. Polega on na uzupełnieniu liczby binarnej do 1, dodaniu 1 i\n        zapisaniu wyniku w postaci binarnej. Natomiast uzupełnienie do jedynki\n        to metoda, w której każdy bit liczby binarnej jest zamieniany na\n        przeciwny i do wyniku dodawana jest 1.\n      </p>\n      <p>\n        W arytmetyce binarnej do dodawania liczb stosuje się dodawanie bitowe.\n        Natomiast odejmowanie można przeprowadzić przy pomocy uzupełnień.\n      </p>\n      <p>\n        W kodach liczb stosowane są różne sposoby kodowania liczb, np. kod\n        binarny, kod uzupełnień do dwóch, kod uzupełnień do jedynki. Każdy z\n        tych kodów ma swoje charakterystyczne cechy, np. kod uzupełnień do dwóch\n        jest prostszy do implementacji w sprzęcie, natomiast kod uzupełnień do\n        jedynki pozwala na wykonanie operacji dodawania i odejmowania bez\n        konieczności wykonywania operacji zamiany znaku.\n      </p>\n      <p>\n        Kod zwarty to metoda kodowania, w której stosuje się kod o stałej\n        długości, niezależnej od wartości kodowanej liczby. W wyniku tej metody\n        otrzymuje się mniejszą redundancję kodu, ale wymaga to większej liczby\n        bitów w przypadku większych liczb.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Logika binama. Funkcje boolowskie. Cyfrowe układy logiczne. Półsumator,\n        sumator.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>Logika binarna</li>\n      <p>\n        dziedzina matematyki zajmująca się operacjami na dwóch wartościach\n        logicznych: prawda (1) i fałsz (0). Funkcje boolowskie to matematyczne\n        wyrażenia, które przyjmują wartości 0 lub 1 w zależności od wartości\n        wejściowych.\n      </p>\n      <li>Cyfrowe układy logiczne</li>\n      <p>\n        zestawy bramek logicznych, wykonujących określone operacje na danych\n        binarnych. Półsumator to podstawowy układ logiczny, który dodaje dwie\n        jednobitowe liczby. Sumator to bardziej zaawansowany układ, który\n        pozwala na dodawanie wielobitowych liczb.\n      </p>\n      <p>\n        W cyfrowych układach logicznych wykorzystuje się także bramki logiczne,\n        takie jak np. bramki AND, OR, NOT, NAND, NOR, XOR, XNOR. Te bramki\n        umożliwiają wykonywanie różnych operacji logicznych, a także budowanie\n        bardziej skomplikowanych układów, takich jak rejestr przesuwny, licznik,\n        czy też procesor.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>\n        Języki formalne. Klasyfikacja Chomsky'ego gramatyk formalnych. Gramatyki\n        bezkontekstowe. Notacja BNF.\n      </h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Języki formalne to matematyczny sposób opisu języków. Klasyfikacja\n        Chomsky'ego to podział na 4 typy gramatyk formalnych, od najmniej do\n        najbardziej ograniczających. Gramatyki bezkontekstowe należą do klasy\n        drugiej, a ich reguły opisują związki między symbolami, bez rozróżnienia\n        ich kontekstu. Notacja BNF (Backus-Naur Form) to forma zapisu gramatyk\n        bezkontekstowych, składająca się z reguł zdefiniowanych jako produkcje.\n      </p>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Przykłady zastosowania pochodnej funkcji liczbowej.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>\n        Obliczanie wartości ekstremów funkcji, tj. miejsc, w których funkcja\n        osiąga maksimum lub minimum.\n      </li>\n      <li>\n        Określanie monotoniczności funkcji, czyli w których przedziałach jest\n        ona rosnąca lub malejąca.\n      </li>\n      <li>\n        Obliczanie wartości pochodnych wyższych rzędów, które pozwalają na\n        analizę bardziej skomplikowanych zachowań funkcji.\n      </li>\n      <li>\n        Wykorzystanie pochodnej do obliczania przybliżonej wartości funkcji w\n        okolicy danego punktu.\n      </li>\n      <li>\n        Zastosowanie w mechanice jako pochodna położenia względem czasu,\n        pozwalająca na obliczanie prędkości, przyspieszenia i innych parametrów\n        ruchu.\n      </li>\n      <li>\n        Zastosowanie w ekonomii i finansach do obliczania stóp zwrotu z\n        inwestycji, szybkości wzrostu i spadku produkcji itp.\n      </li>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Przykłady zastosowania calki oznaczonej.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <li>\n        Obliczanie dystansu przebytego przez ciało: jeśli znamy prędkość ciała w\n        każdym momencie, to możemy obliczyć drogę, jaką przebyło na danym\n        odcinku czasu poprzez obliczenie całki oznaczonej prędkości.\n      </li>\n      <li>\n        Obliczanie pracy wykonywanej przez siłę: jeśli znamy wartość siły\n        działającej na ciało w każdym momencie, to możemy obliczyć pracę\n        wykonaną przez tę siłę na danym odcinku drogi poprzez obliczenie całki\n        oznaczonej siły.\n      </li>\n      <li>\n        Obliczanie całkowitej wartości funkcji: jeśli znamy funkcję, to możemy\n        obliczyć całkowitą wartość tej funkcji na danym odcinku poprzez\n        obliczenie całki oznaczonej tej funkcji.\n      </li>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Macierze i przykłady ich zastosowania.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Macierze to tablice liczb o określonej liczbie wierszy i kolumn, które\n        są wykorzystywane do reprezentowania i manipulowania danymi numerycznymi\n        lub algebraicznymi.\n      </p>\n      <li>Rozwiązywanie układów równań liniowych</li>\n      <li>Transformacja geometryczna obiektów w grafice komputerowej</li>\n      <li>Analiza sieci społecznych lub sieci przemysłowych</li>\n      <li>Kryptografia i szyfrowanie danych</li>\n      <li>Analiza danych statystycznych i eksploracja danych</li>\n      <li>Mechanika kwantowa i obliczenia numeryczne</li>\n    </div>\n    <div class=\"question\" :class=\"{ 'dark-mode': darkMode }\">\n      <h1>Znaczenie rozkladu normalnego.</h1>\n    </div>\n    <div class=\"answer\" :class=\"{ 'dark-mode': darkMode }\">\n      <p>\n        Rozkład normalny, zwany również rozkładem Gaussa, jest jednym z\n        najważniejszych rozkładów prawdopodobieństwa w statystyce.\n        Charakteryzuje się krzywą o kształcie dzwonu, w którym średnia, mediana\n        i moda mają taką samą wartość. Wiele zjawisk w przyrodzie i\n        społeczeństwie ma rozkład zbliżony do normalnego, co umożliwia\n        wykorzystanie tego rozkładu do modelowania tych zjawisk i przewidywania\n        ich zachowania w przyszłości. Rozkład normalny jest również kluczowy w\n        teorii błędów pomiarowych i inferencji statystycznej.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      darkMode: true,\n    };\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nbody {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\nh1 {\n  font-size: 28px;\n  font-weight: bold;\n  margin: 20px 0;\n}\n\nh2 {\n  font-size: 24px;\n  font-weight: bold;\n  margin: 10px 0;\n}\n\np {\n  font-size: 16px;\n  margin: 5px 0;\n}\n\n.question {\n  background-color: #eee;\n  padding: 10px;\n}\n\n.answer {\n  background-color: #f7f7f7;\n  padding: 10px;\n  margin-left: 20px;\n}\nul {\n  list-style: disc;\n  margin-left: 20px;\n  padding-left: 20px;\n}\n\nol {\n  list-style: decimal;\n  margin-left: 20px;\n  padding-left: 20px;\n}\n\nli {\n  font-size: 16px;\n  margin: 5px 0;\n  padding-top: 20px;\n}\ndiv.dark-mode {\n  background-color: #333;\n  color: #fff;\n}\n\n.question.dark-mode {\n  background-color: #444;\n}\n\n.answer.dark-mode {\n  background-color: #555;\n}\n\nul.dark-mode {\n  color: #fff;\n}\n\nol.dark-mode {\n  color: #fff;\n}\n\nli.dark-mode {\n  color: #fff;\n}\n.dark-mode-toggle {\n  background-color: transparent;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  font-size: 24px;\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 9999;\n}\n\n.dark-mode-toggle:hover {\n  color: #f0f0f0;\n}\n\n.dark-mode-toggle i {\n  transition: transform 0.3s ease-in-out;\n}\n\n.dark-mode-toggle.dark-mode i {\n  transform: rotate(180deg);\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=1ee1ddf9\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=1ee1ddf9&lang=css\"\n\nimport exportComponent from \"/Users/maciejszymanski/Desktop/pytania_na_obrone/Pytania_obrona_in-yniera_web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpytania_na_obrone\"] = self[\"webpackChunkpytania_na_obrone\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(7695); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_11","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_21","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_31","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_41","_hoisted_43","_hoisted_45","_hoisted_47","_hoisted_49","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_61","_hoisted_63","_hoisted_65","_hoisted_67","_hoisted_79","_hoisted_81","_hoisted_93","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","_hoisted_100","_hoisted_101","_hoisted_102","_hoisted_103","_hoisted_105","_hoisted_107","_hoisted_108","_hoisted_109","_hoisted_110","_hoisted_111","_hoisted_112","_hoisted_113","_hoisted_115","_hoisted_117","_hoisted_118","_hoisted_119","_hoisted_120","_hoisted_121","_hoisted_122","_hoisted_124","_hoisted_126","_hoisted_127","_hoisted_128","_hoisted_129","_hoisted_130","_hoisted_131","_hoisted_132","_hoisted_134","_hoisted_136","_hoisted_137","_hoisted_138","_hoisted_139","_hoisted_140","_hoisted_141","_hoisted_142","_hoisted_144","_hoisted_146","_hoisted_147","_hoisted_148","_hoisted_149","_hoisted_150","_hoisted_151","_hoisted_152","_hoisted_153","_hoisted_155","_hoisted_157","_hoisted_168","_hoisted_170","_hoisted_184","_hoisted_186","_hoisted_188","_hoisted_190","_hoisted_192","_hoisted_194","_hoisted_195","_hoisted_197","_hoisted_199","_hoisted_201","_hoisted_203","_hoisted_204","_hoisted_206","_hoisted_208","_hoisted_210","_hoisted_212","_hoisted_213","_hoisted_214","_hoisted_215","_hoisted_216","_hoisted_217","_hoisted_218","_hoisted_219","_hoisted_221","_hoisted_223","_hoisted_234","_hoisted_236","_hoisted_249","_hoisted_251","_hoisted_262","_hoisted_264","_hoisted_266","_hoisted_268","_hoisted_270","_hoisted_272","_hoisted_273","_hoisted_274","_hoisted_275","_hoisted_276","_hoisted_277","_hoisted_279","_hoisted_281","_hoisted_293","_hoisted_295","_hoisted_307","_hoisted_309","_hoisted_311","_hoisted_313","_hoisted_314","_hoisted_315","_hoisted_316","_hoisted_317","_hoisted_318","_hoisted_319","_hoisted_320","_hoisted_322","_hoisted_324","_hoisted_336","_hoisted_338","_hoisted_351","_hoisted_353","_hoisted_355","_hoisted_357","_hoisted_359","_hoisted_361","_hoisted_362","_hoisted_363","_hoisted_364","_hoisted_365","_hoisted_366","_hoisted_367","_hoisted_368","_hoisted_370","_hoisted_372","_hoisted_374","_hoisted_376","_hoisted_378","_hoisted_380","_hoisted_382","_hoisted_384","_hoisted_386","_hoisted_388","_hoisted_390","_hoisted_392","_hoisted_394","_hoisted_396","_hoisted_397","_hoisted_398","_hoisted_399","_hoisted_400","_hoisted_401","_hoisted_402","_hoisted_404","_hoisted_406","_hoisted_407","_hoisted_408","_hoisted_409","_hoisted_411","_hoisted_413","_hoisted_414","_hoisted_415","_hoisted_416","_hoisted_418","_hoisted_420","_hoisted_422","_hoisted_424","_hoisted_439","_hoisted_441","_hoisted_452","_hoisted_454","_hoisted_456","_hoisted_458","_hoisted_460","_hoisted_462","_hoisted_464","_hoisted_466","_hoisted_481","_hoisted_483","_hoisted_484","_hoisted_485","_hoisted_486","_hoisted_488","_hoisted_490","_hoisted_491","_hoisted_493","_hoisted_495","_hoisted_496","_hoisted_498","_hoisted_500","_hoisted_501","_hoisted_503","_hoisted_505","_hoisted_518","_hoisted_520","_hoisted_533","_hoisted_535","_hoisted_537","_hoisted_539","_hoisted_552","_hoisted_554","_hoisted_555","_hoisted_556","_hoisted_557","_hoisted_558","_hoisted_559","_hoisted_560","_hoisted_561","_hoisted_563","_hoisted_565","_hoisted_567","_hoisted_569","_hoisted_570","_hoisted_571","_hoisted_572","_hoisted_574","_hoisted_576","_hoisted_577","_hoisted_578","_hoisted_580","_hoisted_582","_hoisted_583","_hoisted_585","_hoisted_587","_hoisted_588","_hoisted_589","_hoisted_590","_hoisted_591","_hoisted_593","_hoisted_595","_hoisted_596","_hoisted_597","_hoisted_598","_hoisted_599","_hoisted_600","_hoisted_601","_hoisted_603","_hoisted_605","_hoisted_607","_hoisted_609","_hoisted_611","_hoisted_613","_hoisted_614","_hoisted_615","_hoisted_617","_hoisted_619","_hoisted_621","_hoisted_623","_hoisted_624","_hoisted_625","_hoisted_626","_hoisted_627","_hoisted_628","_hoisted_630","_hoisted_632","_hoisted_643","_hoisted_645","_hoisted_646","_hoisted_648","_hoisted_650","_hoisted_652","_hoisted_654","_hoisted_655","_hoisted_656","_hoisted_658","_hoisted_660","_hoisted_661","_hoisted_662","_hoisted_663","_hoisted_664","_hoisted_665","_hoisted_667","_hoisted_669","_hoisted_670","_hoisted_671","_hoisted_672","_hoisted_673","_hoisted_675","_hoisted_677","_hoisted_679","_hoisted_681","_hoisted_682","_hoisted_683","_hoisted_684","_hoisted_685","_hoisted_686","_hoisted_688","_hoisted_690","_hoisted_691","_hoisted_692","_hoisted_694","_hoisted_696","_hoisted_697","_hoisted_698","_hoisted_699","_hoisted_700","_hoisted_701","_hoisted_702","_hoisted_704","_hoisted_706","_createElementBlock","class","_normalizeClass","$data","darkMode","onClick","_cache","$event","name","data","__exports__","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}