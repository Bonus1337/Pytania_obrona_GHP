(function(){"use strict";var a={7695:function(a,e,i){var o=i(9242),n=i(3396),r=i(7139);const w=(0,n._)("h1",null," Wymień podstawowe procesy instancji bazy danych Oracle i opisz rolę jednego z nich. ",-1),z=[w],s=(0,n._)("li",null,"Proces serwera",-1),d=(0,n._)("p",null," Odpowiada za komunikację między kientem a serwerem, przetwarzanie ządań uytkownika i udostępnianie danych z bazy danych. ",-1),l=(0,n._)("li",null,"Proces tła",-1),t=(0,n._)("p",null," Proces, który działa w tle i zajmuje się rónymi zadaniami, takimi jak kontrola integralności danych, zarządzanie pamięcią czy wykonywanie kopii zapasowych ",-1),y=(0,n._)("li",null,"Proces zarządzania pamięcią",-1),c=(0,n._)("p",null," Odpowiada za zarządzanie pamięcią w bazie danych i przypisywania jej do odpowiednich procesów ",-1),k=(0,n._)("p",null," Proces serwera jest bardzo wannym procesem, poniewa to on umozliwia uytkownikom korzystanie z bazy danych. Kiedy uytkownik chce uzyskać dostęp do danych, wysyła zapytanie do serwera, który następnie przetwarza ądanie i zwraca wynik. Bez procesu serwera nie byłoby mozliwe korzystanie z bazy danych ",-1),p=[s,d,l,t,y,c,k],u=(0,n._)("h1",null," Wymień podstawowe struktury wchodzące w skład SGA instancji bazy Oracle i opisz rolę jednej z nich ",-1),m=[u],j=(0,n._)("li",null,"Buffer Cashe",-1),_=(0,n._)("p",null," Pamięć podręczna, w której baza danych przechowuje dane wczytane z dysku. Jej rolą jest przyspieszenie dostępu do danych, poniewaz wczytywanie danych z tej pamięci jest szybsze niz z dysku. Zazwyczja przechowuje dane jak bloki, tabele, indeksy. ",-1),b=(0,n._)("li",null,"Shared Pool",-1),h=(0,n._)("p",null," Pamięć gdzie są przechowywane informacje o sesjach uytkowników oraz informacje o wykonywanych zapytaniach. Dzięki temu baza danych Oracle moe wykonywać szybciej zapytania uytkowników i bardziej efektownie. ",-1),g=(0,n._)("li",null,"Redo Log Buffer",-1),f=(0,n._)("p",null," Pamięć w której baza danych przechowuje informacje o zmiennych w danych, które muszą być zapisane na dysku. przechowuje informacje o zmiennych w czasie rzeczywistym, a następnie zapisuje je w Redo Log Files. ",-1),C=(0,n._)("p",null," Redo Log Buffer umoliwia bezpiecznie przechowywać informacje o zmianach w danych, które muszą być zapisane na dysku. W przypadku awarii lub utraty zasilania, baza danych moe przywrócić stan danych zapisanych w Redo Log Files ",-1),v=[j,_,b,h,g,f,C],M=(0,n._)("h1",null," Wymień tryby zatrzymywania instancji bazy Oracle i opisz jeden z nich ",-1),P=[M],S=(0,n._)("li",null,"Shutdown Immediate",-1),O=(0,n._)("p",null," Zatrzymuje bazę natychmiastowo. Wszystkie transakcje zostają zakończone, a sesja uytkowników zamknięta. Dane niezapisane zostają zapisane. Tryb stosowany w przypadku awarii / konserwacji ",-1),W=(0,n._)("li",null,"Shutdown Normal",-1),q=(0,n._)("p",null," Baza danych zostaje zamknięta ale nie kończy aktywnych transakcji. Sesje uytkowników zostają zamknięte ale baza czeka na zakończenie transakcji. ",-1),D=(0,n._)("li",null,"Shutdown Immediate with Abort",-1),A=(0,n._)("p",null," Natychmiastowo zatrzymuje baze ale bez czekania na zakonczenie aktywnych transakcji. Sesje uzytkownika zostaja zamkniete, a baza nie czeka na zakończenie transakcji ",-1),I=(0,n._)("p",null," W trybie Shutdown Immediate baza danych natychmiastowo zatrzymuje swoją pracę, wszystkie transakcje zostaną zakończone, a sesje użytkowników zostaną zamknięte. Wszystkie zmiany, które nie zostały jeszcze zapisane na dysku, zostaną zapisane, co zapobiegnie utracie danych. Tryb ten jest bardzo szybki i niezawodny, ale należy używać go ostrożnie, ponieważ aktywne transakcje mogą zostać przerwane, co może prowadzić do utraty danych lub niezgodności w bazie danych. ",-1),E=[S,O,W,q,D,A,I],R=(0,n._)("h1",null," Wymień fazy uruchamiania instancji bazy Oracle i opisz jeden z nich. ",-1),T=[R],N=(0,n._)("li",null,"STARTUP NOMOUNT",-1),L=(0,n._)("p",null," Uruchamianie bazy danych ale bez montowania. Brak dostępności bazy danych dla uytkowników i nie mona wykonywać operacji na bazie ",-1),F=(0,n._)("li",null,"STARTUP MOUNT",-1),Z=(0,n._)("p",null," Montowanie bazy danych ale bez otwarcia. Baza dostępna tylko dla administratorów bazy danych, którzy mogą wykonywać operacje na poziomie plików takie jak tworzenie usuwanie lub zmiana rozmiaru plików ",-1),J=(0,n._)("li",null,"STARTUP OPEN",-1),B=(0,n._)("p",null,"Jest w pełni dostępna dla uytkowników",-1),U=(0,n._)("p",null," STARTUP OPEN Faza uruchamiania instancji bazy danych. W tym trybie baza danych jest w pełni dostępna dla użytkowników, którzy mogą wykonywać operacje na danych. ",-1),K=[N,L,F,Z,J,B,U],x=(0,n._)("h1",null,"Omów rolę jaką odgrywają przestrzenie tabel bazy danych Oracle",-1),G=[x],Q=(0,n._)("p",null," Przestrzenie tabel w bazie danych Oracle są niezbędne dla efektywnego zarządzania pamięcią dyskową i umożliwiają uniknięcie problemów związanych z brakiem miejsca na dysku. ",-1),X=[Q],H=(0,n._)("h1",null,"Omów pojęcie transakcji w realacyjncyh bazach danych",-1),V=[H],Y=(0,n._)("p",null," Transakcja w bazach danych to jednostka pracy, która wykonuje jedno lub więcej poleceń SQL. Musi być wykonywana jako całość lub w ogóle nie być wykonywana, zgodnie z zasadami ACID. Dzięki temu zapewniają integralność danych i unikają problemów związanych z jednoczesnym dostępem do tych samych danych przez różne aplikacje lub użytkowników. W przypadku awarii lub błędu, baza danych cofa wszystkie zmiany dokonane przez transakcję do poprzedniego stabilnego stanu bazy danych (rollback). ",-1),$=[Y],aa=(0,n._)("h1",null,"Wymień podstawowe grupy poleceń języka SQL i omów jedną z nich",-1),ea=[aa],ia=(0,n._)("li",null,"Polecenia DDL",-1),oa=(0,n._)("p",null," Słuą do tworzenia, modyfikowania i usuwania struktury bazy danych, takie jak tabele, widoki, indeksy ",-1),na=(0,n._)("li",null,"Polecenia DML",-1),ra=(0,n._)("p",null,"Słuą do dodawania, aktualizowania lub usuwania rekordów do tabeli",-1),wa=(0,n._)("li",null,"Polecenia DQL",-1),za=(0,n._)("p",null,"Słuą do wyświetlania danych",-1),sa=(0,n._)("li",null,"Polecenia DCL",-1),da=(0,n._)("p",null,"Słuą do zarządzania uprawnieniami dostępu do bazy danych",-1),la=(0,n._)("p",null," Polecenia DDL, które służą do tworzenia, modyfikowania i usuwania struktury bazy danych. Przykładowo, polecenie CREATE TABLE służy do tworzenia nowej tabeli, a polecenie ALTER TABLE umożliwia modyfikację istniejącej tabeli, na przykład dodanie nowych kolumn lub zmiana typu danych. Usuwanie tabeli z bazy danych jest możliwe za pomocą polecenia DROP TABLE. Polecenia DDL są bardzo ważne, ponieważ pozwalają na definiowanie struktury bazy danych, która jest potrzebna do przechowywania i zarządzania danymi. ",-1),ta=[ia,oa,na,ra,wa,za,sa,da,la],ya=(0,n._)("h1",null," Omów pojęcie normalizacji w modelu relacyjnym i scharakteryzuj jedną z postaci normalnych ",-1),ca=[ya],ka=(0,n._)("p",null," Tabele w bazie danych są projektowane w taki sposób, aby kada tabela zawierała tylko unikalne dane, a zaleznosci miedzy nimi byly jasno okreslone i spójne.Jedną z postaci normalnych jest pierwsza postać normalna (1NF). Aby tabela spełniała wymagania pierwszej postaci normalnej, każda jej komórka powinna zawierać tylko pojedynczą wartość, a nie zestaw wartości lub tablice. Ponadto, tabela powinna mieć unikalny identyfikator (klucz główny), który jednoznacznie identyfikuje każdy rekord w tabeli. Dzięki temu minimalizowane są powtórzenia danych i eliminowane anomalie. ",-1),pa=[ka],ua=(0,n._)("h1",null,"Wymień podstawowe operacje algebry realacji i omów jedną z nich",-1),ma=[ua],ja=(0,n.uE)("<li>Selekcja (SELECT)</li><p>Wybiera określone rekordy z relacji spełniające określone warunki</p><li>Projekcja (PROJECT)</li><p>Wybiera określone kolumny z relacji</p><li>Łączenie (JOIN)</li><p> Łączy rekordy z dwóch lub więcej relacji na podstawie określonych warunków </p><li>Różnica (DIFFERENCE)</li><p>Zwraca rekordy z jednej relacji, które nie występują w drugiej</p><li>Suma (UNION)</li><p> Zwraca zbiór rekordów zawierający rekordy ze wszystkich relacji bez powtórzeń </p><p> Selekcja wybiera określone rekordy z relacji spełniające określone warunki. Na przykład, polecenie SELECT * FROM tabela WHERE warunek wybierze wszystkie rekordy z tabeli, które spełniają określony warunek. </p>",11),_a=[ja],ba=(0,n._)("h1",null,"Omów rolę i typy indeksów w relacyjnych bazach danych",-1),ha=[ba],ga=(0,n.uE)("<p> Pozwalają na szybsze wyszukiwanie i sortowanie rekordów w tabelach bazy danych. </p><li>Indeks podstawowy (Primary Index)</li><p> Torzony na kolumnie, która jest kluczem głównym tabeli. Zapewnia unikatowość wartości w kolumnie i przyspiesza wyszukiwanie rekordów po kluczy głownym </p><li>Indeks złożony (Secondary Index)</li><p> Umoliwia szybkie wyszukiwanie i sortowanie rekordów po wartościach w kolumnach indeksowych </p><li>Indeks bitmapowy (Bitmap Index)</li><p> Indeks bitmapowy tworzy mapę bitową dla każdej wartości w kolumnie i umożliwia szybkie wyszukiwanie rekordów zawierających określone wartości. </p><li>Indeks funkcjonalny (Function-based Index)</li><p> Tworzony na podstawie funkcji matematycznych lub logicznych stosowanych na wartościach w kolumnie. Umożliwia szybkie wyszukiwanie i sortowanie rekordów po wartościach uzyskiwanych przez funkcje. </p><li>Indeks pełnotekstowy (Full-text Index)</li><p> Stosowany w przypadku, gdy tabela zawiera duże ilości tekstu. Indeks pełnotekstowy umożliwia szybkie wyszukiwanie rekordów po określonych słowach lub frazach w tekście. </p>",11),fa=[ga],Ca=(0,n._)("h1",null,"Wymień podstawowe moduły klasy ERP i omów jeden z nich",-1),va=[Ca],Ma=(0,n._)("p",null," ERP (Enterprise Resource Planning) to system informatyczny, który integruje różne procesy biznesowe w organizacji, takie jak zarządzanie finansami, produkcją, sprzedażą, logistyką, magazynem czy personelem. Podstawowe moduły klasy ERP to: ",-1),Pa=(0,n._)("li",null,"Moduł finansowo-księgowy",-1),Sa=(0,n._)("p",null," umoliwia prowadzenie ewidencji finansowej, w tym księgowości, budetów, płatności, fakturowania oraz raportowania finansowego. ",-1),Oa=(0,n._)("li",null,"Moduł produkcji",-1),Wa=(0,n._)("p",null," Pozwala na planowanie, kontrolę i optymalizację procesów produkcyjnych ",-1),qa=(0,n._)("li",null,"Moduł sprzedazy",-1),Da=(0,n._)("p",null," Umozliwia zarządzanie procesami sprzeday, w tym ofertami, zamówieniami, kontraktami, a take relacjami z klientem ",-1),Aa=(0,n._)("li",null,"Moduł personalny",-1),Ia=(0,n._)("p",null," Umoliwia zarządzanie kadrami, planowanie pracy, wynagrodzeniami i szkoleniami ",-1),Ea=[Ma,Pa,Sa,Oa,Wa,qa,Da,Aa,Ia],Ra=(0,n._)("h1",null," Wymień typy procesów roboczych w systemie SAP NetWeaver i omów rolę jednego z nich. ",-1),Ta=[Ra],Na=(0,n._)("li",null,"Procesy biznesowe",-1),La=(0,n._)("p",null," Sekwencja powiązanych ze sobą działań biznesowych, które pozwalaną na realizację określonego celu. Ich aytomatyzacja i monitorowanie zapewnia zwiększenie efektywności i kontroli nad działanami biznesowymi ",-1),Fa=(0,n._)("li",null,"Proces Integralny",-1),Za=(0,n._)("p",null," Integrują róne aplikacje i systemy w organizacji, umoliwiając przesyłanie danych między nimi. ",-1),Ja=(0,n._)("li",null,"Procesy automatyzacji",-1),Ba=(0,n._)("p",null," Proces w którym zadania wykonywane przez uzytkowników są zautomatyzowane przy pomocy reguł biznesowych lub algorytmów ",-1),Ua=(0,n._)("p",null," Rolą procesu integracji jest umoliwienie wymiany danych między rónymi aplikacjami i systemami w organizacji. Dzięki temu moliwe jest zapewnienie jednolitej i spójnej bazy danych, co przekłada się na poprawę jakości informacji i zwiększenie efektywności działąń biznesowych. W ramach procesu integracyjnego w SAP NetWeaver mozna wykorzystać rózne standardy i protokoły jak SOAP, HTTP, FTP. Pozwalają one na łatwą integrację z róznymi aplikacjami i systemami ",-1),Ka=[Na,La,Fa,Za,Ja,Ba,Ua],xa=(0,n._)("h1",null," Wymień typy użytkowników w systemie SAP NetWeaver i omów rolę jednego z nich. ",-1),Ga=[xa],Qa=(0,n._)("li",null,"Użytkownik końcowy",-1),Xa=(0,n._)("p",null," Osoba, która korzysta z róznych aplikacji SAP w celu wykonania określonych zadań biznesowych ",-1),Ha=(0,n._)("li",null,"Administrator systemu",-1),Va=(0,n._)("p",null," Osoba odpowiedzialna za zarządzanie i konfiguracje systemu SAP NetWeaver. Instaluje i aktualizuje system, zarządza uzytkownikami i rolami. ",-1),Ya=(0,n._)("li",null,"Deweloper",-1),$a=(0,n._)("p",null," Osoba która tworzy i rozwija aplikacje. Zajmują się programowaniem w języku ABAP, projektowaniem interfejsów uzytkownika i testami ",-1),ae=[Qa,Xa,Ha,Va,Ya,$a],ee=(0,n._)("h1",null," Wymień typy urządzeń w podsystemie wydruku w systemie SAP NetWeaver i omów rolę jednego z nich. ",-1),ie=[ee],oe=(0,n._)("li",null,"Drukarka lokalna",-1),ne=(0,n._)("p",null," Urządzenie podłączone bezpośrednio do komputera uzytkownika. Drukarka lokalna moze być wykorzystywana do wydruku raportów, formularzy i innych dokumentów z systemu SAP ",-1),re=(0,n._)("li",null,"Drukarka sieciowa",-1),we=(0,n._)("p",null," Urządzenie podłączone do sieci komputerowej, która umozliwia wykorzystywanie przez wiele uzytkownikow w roznych miejscach ",-1),ze=(0,n._)("li",null,"Drukarka SAP",-1),se=(0,n._)("p",null," Urzadzenie specjalnie zaprojektowane do wydruku dokumentow z systemu SAP. Pozwalaja na drukowanie raportow faktur, etykiet i innych dokumentow w sposob zoptymalizowany pod katem specyfikacji SAP ",-1),de=(0,n._)("p",null," Drukarka sieciowa - umozliwia wielu uzytkownikom korzystanie z jednego urzadzenia, co przyczynia sie do zwiekszenia wydajnosci i oszczędności w firmie. Pozwala na drukowanie dokumentów z dowolnego miejsca w sieci, co ułatwia pracę zespołową i umozliwia szybsze przetwarzanie infrmacji. ",-1),le=[oe,ne,re,we,ze,se,de],te=(0,n._)("h1",null," Wymień składowe czasu odpowiedzi w systemie SAP NetWeaver i omów jedną z nich ",-1),ye=[te],ce=(0,n._)("li",null,"Czas przetwarzania serwera",-1),ke=(0,n._)("p",null," Czas który serwer potrzebuje na przetworzenie zapytania i wygenerowanie odpowiedzi. Zalezy od mocy obliczeniowej serwera oraz od liczby i złozoności wykonywanych operacji. ",-1),pe=(0,n._)("li",null,"Czas przetwarzania sieciowego",-1),ue=(0,n._)("p",null," Czas który potrzebny jest na przesłanie danych między kientem a serwerem przez sieć. Zaley od przepustowości sieci oraz wielkości przesyłanych danych. ",-1),me=(0,n._)("li",null,"Czas przetwarzanie klienta",-1),je=(0,n._)("p",null," Czas który potrzebny jest na przetworzenie danych przez klienta, np. wyświetlenie wyników zapytania lub na wykonanie obliczeń po stronie klienta. ",-1),_e=(0,n._)("p",null," Przetwarzanie serwera jest to czas, który jest potrzeby na przetworzenie zapytania i wygenerowanie odpowiedzi przez serwer. Składowa ta moze być uzalezniona od wielu czynników, takich jak załoznosc wykonywanych operacji, obciązenie serwera, konfiguracji serwera oraz ilosci dostępnej pamięci. ",-1),be=[ce,ke,pe,ue,me,je,_e],he=(0,n._)("h1",null,"Opóźnienie propagancji; transmisji; przetwarzania; kolejkowania.",-1),ge=[he],fe=(0,n._)("li",null,"Opóźnienie propagacji",-1),Ce=(0,n._)("p",null," Czas potrzebny na przesłanie sygnału lub informacji przez medium transmisyjne, np. przewód, kabel czy falę radiową. Opóźnienie zalezy od długości trasy, jaką musi pokonać zygnał, a takze od szybkosci rozchodzenia sie sygnalu w danym medium. ",-1),ve=(0,n._)("li",null,"Opóźnienie transmisji",-1),Me=(0,n._)("p",null," Czas potrzebny na wysłanie bitów danych przez medium transmisyjne. Opóźnienie transmisji zalezy od szybkości transmisji. ",-1),Pe=(0,n._)("li",null,"Opóźnienie przetwarzania",-1),Se=(0,n._)("p",null," Czas potrzebny na przetworzenie danych przez urządzenie, np procesor, pamięć podręczną, czy kartę sieciową. ",-1),Oe=(0,n._)("li",null,"Opóźnienie kolejkowania",-1),We=(0,n._)("p",null," Czas potrzebny na oczekiwanie w kolejce do przetwarzania danych przez urządzenie np. router, przełącznik sieciowy czy serwer. ",-1),qe=[fe,Ce,ve,Me,Pe,Se,Oe,We],De=(0,n._)("h1",null,"Co to jest Servie Worker i opisz jego funkcje.",-1),Ae=[De],Ie=(0,n.uE)("<p> Service Worker to technologia stosowana w aplikacjach webowych, umożliwiająca tworzenie procesów w tle, które działają niezależnie od samej strony internetowej i mają zdolność do obsługi zapytań sieciowych oraz zarządzania pamięcią podręczną. </p><p>Główne funkcje Service Workera to:</p><li>Obsługa zapytań sieciowych offline</li><p> Service Worker może przechowywać kopie danych na urządzeniu użytkownika, co pozwala na wyświetlanie treści nawet bez połączenia z siecią. </p><li>Zarządzanie pamięcią podręczną</li><p> Dzięki Service Workerowi, aplikacja może przechowywać pewne dane w pamięci podręcznej, co znacznie przyspiesza ładowanie strony i zmniejsza ilość zapytań do serwera. </p><li>Powiadomienia</li><p> Service Worker pozwala na wyświetlanie powiadomień użytkownikowi, nawet gdy strona internetowa jest zamknięta. </p><li>Przetwarzanie tła</li><p> Service Worker umożliwia wykonywanie operacji w tle, np. synchronizacja danych z serwerem lub aktualizacja aplikacji. </p>",10),Ee=[Ie],Re=(0,n._)("h1",null," Omów optymalną listę kontrolną progresywnej aplikacji internetowej. ",-1),Te=[Re],Ne=(0,n.uE)("<p> Optymalna lista kontrolna progresywnej aplikacji internetowej (PWA) to zestaw wskazówek i najlepszych praktyk dla twórców aplikacji, którzy chcą zapewnić jak najlepsze wrażenia użytkownikom. </p><li>Responsywność</li><p> Strona internetowa powinna być responsywna, co oznacza, że powinna dostosowywać się do różnych rozmiarów ekranów i urządzeń. </p><li>Dostępność offline</li><p> PWA powinna umożliwiać korzystanie z aplikacji bez połączenia z internetem, dzięki możliwości przechowywania danych w pamięci podręcznej. </p><li>Szybkość ładowania</li><p> Strona internetowa powinna ładować się szybko, co zwiększa szanse na pozyskanie i utrzymanie użytkowników. </p><li>Użyteczność</li><p> PWA powinna być intuicyjna w użyciu, a funkcje powinny być łatwo dostępne i zrozumiałe dla użytkowników. </p><li>Bezpieczeństwo</li><p> Strona internetowa powinna być zabezpieczona przed atakami, a użytkownicy powinni czuć się bezpiecznie podczas korzystania z aplikacji. </p><li>Dostępność na urządzeniach mobilnych</li><p> PWA powinna działać bezproblemowo na różnych urządzeniach mobilnych, a interfejs powinien być zaprojektowany z myślą o użytkownikach korzystających z ekranów dotykowych. </p>",13),Le=[Ne],Fe=(0,n._)("h1",null,"Omów wytażenia warunkowe.",-1),Ze=[Fe],Je=(0,n._)("p",null," Wyrażenia warunkowe to instrukcje programistyczne, które pozwalają na wykonanie pewnych czynności w zależności od spełnienia określonych warunków ",-1),Be=[Je],Ue=(0,n._)("h1",null,"Co to jest przeciążanie metod.",-1),Ke=[Ue],xe=(0,n._)("p",null," Przeciążanie metod to mechanizm programowania obiektowego, który pozwala na definiowanie wielu metod o tej samej nazwie, ale różniących się listą parametrów. ",-1),Ge=[xe],Qe=(0,n._)("h1",null,"Czym są ptętle - pętla while i do while.",-1),Xe=[Qe],He=(0,n._)("p",null,' Pętla "while" to instrukcja programistyczna, która wykonuje blok kodu, dopóki określony warunek jest prawdziwy. Warunek jest sprawdzany przed wykonaniem bloku kodu. Jeśli warunek jest fałszywy już na początku, blok kodu nie zostanie wykonany ani razu. ',-1),Ve=(0,n._)("p",null,' Pętla "do while" to instrukcja programistyczna, która wykonuje blok kodu przynajmniej raz, a następnie sprawdza, czy warunek jest prawdziwy, aby określić, czy kontynuować wykonanie bloku kodu. Jeśli warunek jest fałszywy, pętla zostanie przerwana. ',-1),Ye=[He,Ve],$e=(0,n._)("h1",null,"Podaj Międzynarodowy Standard ISO, który opisuje ISO C++.",-1),ai=[$e],ei=(0,n._)("p",null," MISO C++ to standard języka programowania C++, który jest opisany przez Międzynarodową Organizację Normalizacyjną (ISO). Standard ten został opublikowany jako ISO/IEC 14882 w 1998 roku, a następnie został zaktualizowany w 2003 roku (ISO/IEC 14882:2003) oraz 2011 roku (ISO/IEC 14882:2011). ",-1),ii=[ei],oi=(0,n._)("h1",null,'Podaj różnicę między operatorem "==" a "=\'.',-1),ni=[oi],ri=(0,n._)("p",null,' Operator "==" (równa się) jest operatorem porównania w językach programowania, który zwraca wartość logiczną "true" lub "false" w zależności od tego, czy dwa wyrażenia są równe sobie. Operator ten jest używany do porównywania wartości, które są przechowywane w zmiennych, obiektach lub wyrażeniach. ',-1),wi=(0,n._)("p",null,' Operator "=" (przypisanie) jest operatorem przypisania, który służy do przypisywania wartości jednej zmiennej lub obiektu do innej zmiennej lub obiektu. Operator ten nie porównuje wartości, ale zamiast tego przypisuje wartość z prawej strony do zmiennej lub obiektu po lewej stronie. ',-1),zi=[ri,wi],si=(0,n._)("h1",null,"Jakie jest zastosowanie funkcji getchar()?",-1),di=[si],li=(0,n._)("p",null," W skrócie, funkcja getchar() jest używana do wczytywania pojedynczych znaków z wejścia standardowego i ma wiele zastosowań w programowaniu, od pobierania danych od użytkownika do przetwarzania plików tekstowych. ",-1),ti=[li],yi=(0,n._)("h1",null,"Wymień i omów planistów w systemie operacyjnym.",-1),ci=[yi],ki=(0,n._)("li",null,"Planista czasowy",-1),pi=(0,n._)("p",null," Alokuje procesor na podstawie czasu przydzielonego dla każdego procesu. Zwykle używa się go w systemach czasu rzeczywistego. ",-1),ui=(0,n._)("li",null,"Planista zdarzeniowy",-1),mi=(0,n._)("p",null," Alokuje procesor na podstawie zdarzeń, takich jak żądania wejścia-wyjścia, wywołania systemowe lub przerwania. ",-1),ji=(0,n._)("li",null,"Planista priorytetowy",-1),_i=(0,n._)("p",null," Alokuje procesor na podstawie priorytetów procesów. Procesy o wyższym priorytecie mają pierwszeństwo w dostępie do procesora. ",-1),bi=(0,n._)("li",null,"Planista proporcjonalny",-1),hi=(0,n._)("p",null," Alokuje procesor w sposób proporcjonalny do przypisanych mu udziałów zasobów. ",-1),gi=[ki,pi,ui,mi,ji,_i,bi,hi],fi=(0,n._)("h1",null,"Wymień stany procesów systemach operacyjnych Microsoft.",-1),Ci=[fi],vi=(0,n.uE)("<li>Stan gotowości</li><p>Proces jest gotowy do wykonania i oczekuje na przydział procesora.</p><li>Stan wykonywania</li><p>Proces jest aktualnie wykonywany przez procesor.</p><li>Stan oczekiwania</li><p> Proces oczekuje na zasoby lub na wykonanie pewnej operacji, np. oczekuje na zdarzenie wejścia-wyjścia. </p><li>Stan zawieszenia</li><p> Proces jest zawieszony, czyli nie jest wykonywany ani nie oczekuje na żadne zasoby. </p><li>Stan zakończenia</li><p>Proces zakończył swoje działanie.</p>",10),Mi=[vi],Pi=(0,n._)("h1",null,"Wymień stany procesów systemów unixowych.",-1),Si=[Pi],Oi=(0,n.uE)("<li>Stan gotowości</li><p>Proces jest gotowy do wykonania i oczekuje na przydział procesora.</p><li>Stan wykonywania</li><p>Proces jest aktualnie wykonywany przez procesor.</p><li>Stan oczekiwania</li><p> Proces oczekuje na zasoby lub na wykonanie pewnej operacji, np. oczekuje na zdarzenie wejścia-wyjścia. </p><li>Stan zatrzymania</li><p>Proces został zatrzymany i nie wykonuje żadnych operacji.</p><li>Stan uśpienia</li><p> Proces został uśpiony i oczekuje na zdarzenie, które spowoduje jego wybudzenie. </p><li>Stan zombie</li><p> Proces, który zakończył swoje działanie, ale jeszcze nie został usunięty z systemu. </p>",12),Wi=[Oi],qi=(0,n._)("h1",null,"Omów główne typy barw ze względu na skojarzenia.",-1),Di=[qi],Ai=(0,n.uE)("<li>Barwy ciepłe</li><p> Czerwień, pomarańcz, żółć. Zwykle kojarzone z energią, namiętnością, pozytywnym nastawieniem, ale też niekiedy z agresją lub ryzykiem. </p><li>Barwy zimne</li><p> Niebieski, zielony, fiolet. Często kojarzone z spokojem, harmonią, naturą, ale także z obojętnością lub depresją. </p><li>Barwy jaskrawe</li><p> Fiolet, różowy, jaskrawa żółć. Wywołują skojarzenia z radością, zabawą, entuzjazmem, ale też mogą być uciążliwe dla oczu lub wywoływać uczucie chaosu. </p><li>Barwy pastelowe</li><p> Jasny róż, błękit, miętowy. Kojarzone z delikatnością, subtelnością, romantyzmem, ale też mogą być uważane za zbyt łagodne lub nudne. </p><li>Barwy ziemi</li><p> Brąz, khaki, beż. Często kojarzone z naturą, stabilnością, naturalnością, ale też mogą wywoływać skojarzenia z przestarzałością lub nudą. </p>",10),Ii=[Ai],Ei=(0,n._)("h1",null,"Jak działa algorym bulge.",-1),Ri=[Ei],Ti=(0,n._)("p",null," Algorytm Bulge wyróżnia się tym, że pozwala na zmniejszenie liczby operacji potrzebnych do wyznaczenia wartości własnych i wektorów własnych w porównaniu z innymi algorytmami, szczególnie gdy macierz wejściowa ma bardzo dużą liczbę wierszy i kolumn. Algorytm ten wykorzystywany jest w wielu dziedzinach nauki i technologii, w tym w przetwarzaniu sygnałów, analizie danych, fizyce i chemii. ",-1),Ni=[Ti],Li=(0,n._)("h1",null,"Omów modelowanie w grafice 3D.",-1),Fi=[Li],Zi=(0,n._)("p",null," Proces modelowania polega na tworzeniu kształtu obiektu poprzez dodawanie, usuwanie i modyfikowanie geometrii. Dostępne są różne narzędzia pozwalające na dokładne kształtowanie modelu, w tym narzędzia do rysowania, wycinania, skalowania, obracania, czy dodawania tekstur. ",-1),Ji=[Zi],Bi=(0,n._)("h1",null,"Wymień pradygmaty programowania i omów szczegółowo jeden wybrany",-1),Ui=[Bi],Ki=(0,n._)("li",null,"Programowanie imperatywne",-1),xi=(0,n._)("p",null," Program składa się z sekwencji instrukcji, które są wykonywane po kolei. Programista określa kroki, jakie powinien wykonać program, aby osiągnąć pożądany wynik. Podstawową strukturą kontrolną w tym paradygmacie jest instrukcja warunkowa (if) oraz pętla (for, while). Programowanie imperatywne koncentruje się na tym, co program ma zrobić, a nie na tym, jak to zrobić. ",-1),Gi=(0,n._)("li",null,"Programowanie funkcyjne",-1),Qi=(0,n._)("p",null," Program składa się z wywoływania funkcji, a nie z sekwencji instrukcji. Funkcje nie zmieniają stanu programu i nie mają efektów ubocznych, tzn. działają tylko na swoich argumentach i zwracają wartość. Programowanie funkcyjne koncentruje się na deklaratywnym opisie problemów, a nie na tym, jak te problemy mają zostać rozwiązane. ",-1),Xi=(0,n._)("li",null,"Programowanie obiektowe",-1),Hi=(0,n._)("p",null," Program składa się z obiektów, które mają swoje własności (atrybuty) oraz metody (operacje, które można wykonać na obiekcie). Programowanie obiektowe koncentruje się na modelowaniu świata rzeczywistego poprzez obiekty i relacje między nimi. ",-1),Vi=[Ki,xi,Gi,Qi,Xi,Hi],Yi=(0,n._)("h1",null,"Wzorzec programowania SOLID.",-1),$i=[Yi],ao=(0,n.uE)("<p> Zastosowanie zasad SOLID w projektowaniu aplikacji pomaga w tworzeniu elastycznego i łatwego w utrzymaniu kodu, co przekłada się na oszczędność czasu i pieniędzy w dalszej fazie rozwoju aplikacji. </p><li>Single Responsibility Principle</li><p> Asada pojedynczej odpowiedzialności: każda klasa powinna mieć tylko jedno, jasno zdefiniowane zadanie. Dzięki temu klasa jest łatwiejsza w utrzymaniu i zmianach. </p><li>Open-Closed Principle</li><p> Zasada otwarte-zamknięte: klasy powinny być otwarte na rozszerzenie, ale zamknięte na modyfikację. Zmiana zachowania klasy powinna odbywać się poprzez dziedziczenie i polimorfizm, a nie przez modyfikowanie istniejącego kodu. </p><li>Liskov Substitution Principle</li><p> Zasada podstawienia Liskov: obiekt klasy podrzędnej powinien być w stanie zastąpić obiekt klasy nadrzędnej bez zmiany spodziewanego zachowania programu. Innymi słowy, dziedziczenie powinno być używane tylko wtedy, gdy klasy naprawdę mają wspólną cechę i działają w sposób spójny. </p><li>Interface Segregation Principle</li><p> Zasada segregacji interfejsów: klienci nie powinni zależeć od interfejsów, których nie potrzebują. Zamiast tego powinny być tworzone bardziej specyficzne interfejsy, które zawierają tylko te metody, które są potrzebne w danym kontekście. </p><li>Dependency Inversion Principle</li><p> Zasada odwrócenia zależności: zależności między modułami powinny być oparte na abstrakcjach, a nie na konkretnych implementacjach. Innymi słowy, moduł wyższego poziomu nie powinien zależeć od modułu niższego poziomu, ale od abstrakcji, które zdefiniowały te moduły. </p>",11),eo=[ao],io=(0,n._)("h1",null," Scharakteryzuj obiekt typu pierwszoklasowego, podaj jego własności. ",-1),oo=[io],no=(0,n.uE)("<p> Obiekt typu pierwszoklasowego to pojęcie z dziedziny programowania obiektowego. Oznacza ono, że w danym języku programowania obiekty są traktowane jak wartości pierwszorzędne, podobnie jak liczby czy ciągi znaków. Oznacza to, że obiekty mogą być przekazywane jako argumenty funkcji, zwracane jako wyniki funkcji, a także przechowywane w zmiennych. </p><li>Przypisywanie</li><p>Można przypisać wartość obiektu do zmiennej.</p><li>Przekazywanie jako argument</li><p>Można przekazać obiekt jako argument funkcji.</p><li>Zwracanie</li><p>Funkcja może zwrócić obiekt jako wynik.</p><li>Tworzenie dynamiczne</li><p>Można tworzyć obiekty dynamicznie w trakcie działania programu.</p><li>Klasa anonimowa</li><p> Możliwe jest definiowanie obiektów bezpośrednio bez definiowania klasy. </p>",11),ro=[no],wo=(0,n._)("h1",null,"Omów cechę oprogramowania : dopuszczalność.",-1),zo=[wo],so=(0,n._)("p",null," Dopuszczalność to jedna z cech oprogramowania, która oznacza, że program spełnia wymagania określone w danym kontekście, np. zgodność z regulacjami prawno-technicznymi, standardami, politykami organizacji itp. Oprogramowanie dopuszczalne musi być zgodne z wszelkimi wymaganiami formalnymi, które określają, jakie funkcje i cechy powinny być obecne lub nieobecne w programie, jakie formaty danych są akceptowalne, jakie procedury testowania i weryfikacji należy stosować itp. ",-1),lo=[so],to=(0,n._)("h1",null," Wymień cztery podstawowe działalności wspólne dla wszystkich procesów wytwarzania oprogramowania. ",-1),yo=[to],co=(0,n._)("li",null,"Planowanie",-1),ko=(0,n._)("p",null," Określenie celów, zadań i wymagań projektu, a także określenie harmonogramu i budżetu projektu. ",-1),po=(0,n._)("li",null,"Analiza",-1),uo=(0,n._)("p",null," Zrozumienie wymagań użytkownika, stworzenie specyfikacji funkcjonalnej, a także określenie ograniczeń projektowych. ",-1),mo=(0,n._)("li",null,"Projektowanie",-1),jo=(0,n._)("p",null," Tworzenie projektu oprogramowania, takiego jak projekt systemu, projekt interfejsu użytkownika, projekt bazy danych, itp. ",-1),_o=(0,n._)("li",null,"Implementacja",-1),bo=(0,n._)("p",null," Faktyczne tworzenie i kodowanie oprogramowania, testowanie oraz integracja różnych modułów oprogramowania w całość. ",-1),ho=[co,ko,po,uo,mo,jo,_o,bo],go=(0,n._)("h1",null," Omów Perspektywę 4+1 - przyporządkuj odpowiednie rodzaje diagramów języka UML ",-1),fo=[go],Co=(0,n.uE)("<p> Perspektywa 4+1 to podejście do modelowania architektury systemu, które składa się z pięciu perspektyw lub widoków, a każda z perspektyw reprezentowana jest przez odpowiedni rodzaj diagramu UML. </p><li>Widok logiczny</li><p> Reprezentowany przez diagram klas - opisuje strukturę klas, relacje między nimi i ich zachowanie. </p><li>Widok procesowy</li><p> Reprezentowany przez diagramy sekwencji, diagramy aktywności, diagramy stanów - opisuje zachowanie systemu w czasie. </p><li>Widok fizyczny</li><p> Reprezentowany przez diagramy komponentów, diagramy wdrożenia - opisuje sposób, w jaki system jest fizycznie zorganizowany i wdrażany. </p><li>Widok użytkownika</li><p> Reprezentowany przez diagramy przypadków użycia - opisuje funkcjonalność systemu z perspektywy użytkownika </p><li>Widok scenariuszy</li><p> Reprezentowany przez scenariusze - opisuje interakcje między użytkownikami a systemem oraz między różnymi częściami systemu. </p>",11),vo=[Co],Mo=(0,n._)("h1",null," Omów elementy, które mają wplyw na postrzeganie obrazów jako wizerunków scen trójwymiarowych. ",-1),Po=[Mo],So=(0,n.uE)("<li>Perspektywy</li><p> Kąt widzenia, z którego patrzymy na scenę, wpływa na proporcje obiektów i na ich pozycję względem siebie. </p><li>Światła</li><p> Oświetlenie sceny wpływa na kolor i intensywność obiektów, a także na cienie, które rzucane są na tle. </p><li>Tekstury</li><p> Detale i faktury obiektów mogą wpływać na to, jak odbieramy ich głębię i trójwymiarowość. </p><li>Koloru</li><p> Odpowiednio dobrana kolorystyka obiektów może pomóc w ich percepcji jako trójwymiarowych. Na przykład, ciemniejsze kolory mogą sugerować cienie, a jaśniejsze - odbicia świetlne. </p><li>Rozdzielczości</li><p> Im wyższa rozdzielczość obrazu, tym więcej detali i lepsza percepcja głębi. </p><li>Ruchu</li><p> Animacje i efekty ruchu mogą pomóc w tworzeniu złudzenia trójwymiarowości. </p>",12),Oo=[So],Wo=(0,n._)("h1",null,"Wskaż różnice między forward raytracing a backward raytracing.",-1),qo=[Wo],Do=(0,n._)("p",null," Główną różnicą między forward raytracing a backward raytracing jest to, że pierwsza metoda wysyła promienie światła od źródła do kamery, a druga metoda od kamery do sceny. Forward raytracing jest szybszy i mniej skomplikowany, ale nie daje tak realistycznych efektów, jak backward raytracing, który jest bardziej czasochłonny, ale daje bardziej realistyczne wyniki. ",-1),Ao=[Do],Io=(0,n._)("h1",null,"Omów współrzędne sferyczne w grafice komputerowej.",-1),Eo=[Io],Ro=(0,n._)("p",null," Współrzędne sferyczne to sposób określenia położenia punktu w trójwymiarowej przestrzeni, w którym używane są trzy wartości: promień r, kąt azymutu θ (mierzony od osi x w płaszczyźnie xy) oraz kąt elewacji φ (mierzony od osi z). ",-1),To=[Ro],No=(0,n._)("h1",null,"Podaj cztery warunki bezpieczeństwa systemu komputerowego.",-1),Lo=[No],Fo=(0,n._)("li",null,"Autoryzacja i uwierzytelnienie użytkowników",-1),Zo=(0,n._)("p",null," By mieć dostęp do systemu, użytkownik musi zostać uwierzytelniony, a następnie autoryzowany, aby uzyskać dostęp do określonych zasobów. ",-1),Jo=(0,n._)("li",null,"Ochrona przed zagrożeniami zewnętrznymi",-1),Bo=(0,n._)("p",null," System musi być chroniony przed atakami z zewnątrz, takimi jak hakerzy, wirusy, złośliwe oprogramowanie, ataki DoS itp. ",-1),Uo=(0,n._)("li",null,"Kontrola dostępu",-1),Ko=(0,n._)("p",null," System musi umożliwiać określenie, kto ma dostęp do różnych zasobów, jakie działania są dozwolone i w jaki sposób mają być realizowane. ",-1),xo=(0,n._)("li",null,"Ciągła aktualizacja i monitorowanie",-1),Go=(0,n._)("p",null," System musi być aktualizowany, aby uwzględniać nowe zagrożenia, a także monitorowany w celu wykrywania i usuwania potencjalnych zagrożeń oraz reagowania na nie w sposób szybki i skuteczny. ",-1),Qo=[Fo,Zo,Jo,Bo,Uo,Ko,xo,Go],Xo=(0,n._)("h1",null,"Scharakteryzuj działanie IDS.",-1),Ho=[Xo],Vo=(0,n._)("p",null," IDS to skrót od Intrusion Detection System, czyli systemu wykrywania włamań. Jest to rodzaj oprogramowania lub sprzętu, którego celem jest monitorowanie systemu komputerowego w celu wykrycia i reagowania na próby nieautoryzowanego dostępu lub ataku. IDS działa na zasadzie analizy ruchu sieciowego oraz zachowań systemowych, a jego zadaniem jest wykrycie podejrzanych zdarzeń oraz powiadomienie administratora o tym fakcie ",-1),Yo=[Vo],$o=(0,n._)("h1",null," Omow rolę API w bezpieczeństwie sieci i systemów teleinformatycznych. ",-1),an=[$o],en=(0,n._)("p",null," Przede wszystkim umożliwiają one dostęp do funkcjonalności zewnętrznych systemów, usług i aplikacji, co może być wykorzystane do zwiększenia bezpieczeństwa poprzez integrację z narzędziami monitorującymi, systemami zarządzania tożsamością, firewallami czy systemami wykrywania ataków. ",-1),on=[en],nn=(0,n._)("h1",null," Omów nieprzenośność programów między różnymi procesorami lub niewykorzystywanie przez aplikacje wszystkich możliwości procesora. ",-1),rn=[nn],wn=(0,n._)("p",null," Nieprzenośność programów między różnymi procesorami lub niewykorzystywanie przez aplikacje wszystkich możliwości procesora wynika z różnic w architekturze procesorów i sposobie działania poszczególnych instrukcji. W praktyce oznacza to, że programy pisane dla jednej platformy sprzętowej mogą nie działać na innej platformie, a nawet jeśli działają, to mogą działać wolniej lub nie wykorzystywać wszystkich możliwości procesora. ",-1),zn=[wn],sn=(0,n._)("h1",null,"Co to jest chmura natywna?",-1),dn=[sn],ln=(0,n._)("p",null," Chmura natywna to koncepcja, w której aplikacje są tworzone i wdrażane z myślą o środowisku chmurowym, wykorzystując do tego celu narzędzia i usługi oferowane przez dostawców chmury publicznej. W odróżnieniu od tradycyjnych aplikacji, które są projektowane do działania w konkretnym środowisku, aplikacje natywne chmury są elastyczne, skalowalne i mogą działać w różnych chmurach. W ten sposób zapewniają one większą wydajność, dostępność i niezawodność w porównaniu do tradycyjnych aplikacji ",-1),tn=[ln],yn=(0,n._)("h1",null,"Co to jest asocjacja?",-1),cn=[yn],kn=(0,n._)("p",null,' W programowaniu obiektowym, asocjacja to relacja między dwoma klasami, która określa, że jedna klasa ma powiązania z obiektami z drugiej klasy. Asocjacja może być jednostronna lub obustronna, a także może mieć atrybuty i operacje. Może też posiadać kierunek, który określa, która klasa jest "właścicielem" relacji, a która jest "podrzędną". Asocjacje są ważnym narzędziem w projektowaniu obiektowym, pozwalającym na wyrażenie zależności między klasami i modelowanie rzeczywistych sytuacji. ',-1),pn=[kn],un=(0,n._)("h1",null,"Omów znaczenie wartości progowej w procesie decyzyjnym.",-1),mn=[un],jn=(0,n._)("p",null," Wartość progowa to wartość graniczna, która decyduje o podjęciu konkretnej decyzji. W procesie decyzyjnym wartość progowa jest stosowana do porównywania wyników lub wskaźników z ustalonym poziomem akceptacji lub odrzucenia. Jeśli wynik lub wskaźnik przekracza wartość progową, podejmowana jest jedna decyzja, a jeśli nie, podejmowana jest inna decyzja. ",-1),_n=[jn],bn=(0,n._)("h1",null,"Omów kategorie decyzji wedlug stopnia ryzyka?",-1),hn=[bn],gn=(0,n._)("p",null,"Decyzje według stopnia ryzyka dzielimy na:",-1),fn=(0,n._)("li",null,"Decyzje pewne",-1),Cn=(0,n._)("p",null," Decyzje, które podejmujemy w oparciu o fakt, że znamy wszystkie możliwe wyniki i ich konsekwencje. W takim przypadku podejmujemy decyzje bez wahania, ponieważ jesteśmy pewni, że podjęcie określonego działania przyniesie oczekiwane skutki. ",-1),vn=(0,n._)("li",null,"Decyzje ryzykowne",-1),Mn=(0,n._)("p",null," Decyzje, które podejmujemy w warunkach niepewności, gdzie nie znamy wszystkich możliwych wyników. W takim przypadku, podjęcie określonej decyzji wiąże się z ryzykiem. W celu zminimalizowania ryzyka, należy dokładnie przeanalizować dostępne opcje i oszacować ich konsekwencje. ",-1),Pn=(0,n._)("li",null,"Decyzje niepewne",-1),Sn=(0,n._)("p",null," Decyzje, które podejmujemy w warunkach braku wiedzy lub informacji. W takim przypadku podejmujemy decyzję na podstawie domysłów lub intuicji, ponieważ nie posiadamy wystarczającej ilości informacji, aby dokonać racjonalnej analizy sytuacji. W takim przypadku, podjęcie decyzji wiąże się z dużym ryzykiem i zawsze istnieje szansa na niepowodzenie. ",-1),On=[gn,fn,Cn,vn,Mn,Pn,Sn],Wn=(0,n._)("h1",null," Podaj dwa konkretne przyklady (nie tylko dziedziny) zastosowań systemów wbudowanych. ",-1),qn=[Wn],Dn=(0,n._)("li",null,"Urządzenia AGD",-1),An=(0,n._)("p",null," Systemy wbudowane znajdują zastosowanie w urządzeniach AGD, takich jak pralki, lodówki, kuchenki mikrofalowe, które sterowane są przy pomocy mikrokontrolerów. Dzięki temu można zautomatyzować procesy, poprawić wydajność i bezpieczeństwo urządzeń. ",-1),In=(0,n._)("li",null,"Motoryzacja",-1),En=(0,n._)("p",null," Systemy wbudowane znajdują szerokie zastosowanie w motoryzacji, np. w samochodach. Kontrolują one wiele funkcji, takich jak sterowanie silnikiem, hamulcami, systemem audio i nawigacją. Systemy te są również odpowiedzialne za bezpieczeństwo, np. poprzez systemy ABS czy ESP. ",-1),Rn=[Dn,An,In,En],Tn=(0,n._)("h1",null," Jakie dwa rodzaje połączeń ze światem zewnętrznym (i rodzaje odpowiadających im sygnałów) sa charakterystyczne dla komputerowych systemów wbudowanych? ",-1),Nn=[Tn],Ln=(0,n._)("li",null,"Wejścia/wyjścia cyfrowe",-1),Fn=(0,n._)("p",null," (GPIO) służą do komunikacji z urządzeniami i czujnikami, które generują sygnały cyfrowe, takie jak przyciski, diody, enkodery itp. GPIO może działać w trybie wejścia, wyjścia lub wejścia/wyjścia. ",-1),Zn=(0,n._)("li",null,"Interfejsy analogowo-cyfrowe (ADC) i cyfrowo-analogowe (DAC)",-1),Jn=(0,n._)("p",null," Umożliwiają przetwarzanie sygnałów analogowych na sygnały cyfrowe i na odwrót. ADC służy do konwersji sygnałów analogowych (takich jak napięcie, temperatura, ciśnienie) na sygnały cyfrowe, które mogą być przetwarzane przez mikrokontroler. DAC z kolei służy do konwersji sygnałów cyfrowych na sygnały analogowe, takie jak np. sygnał audio. ",-1),Bn=[Ln,Fn,Zn,Jn],Un=(0,n._)("h1",null,"Do czego służy magistrala komputera?",-1),Kn=[Un],xn=(0,n._)("p",null," Magistrala komputera to połączenie kilku linii przesyłających informacje między różnymi urządzeniami w komputerze. Służy ona do przesyłania danych pomiędzy różnymi podzespołami komputera, takimi jak procesor, pamięć, karta graficzna, dysk twardy czy inne urządzenia wejścia/wyjścia. Magistrala umożliwia szybki transfer danych wewnątrz komputera, co jest kluczowe dla sprawnego działania systemu. Bez magistrali, urządzenia w komputerze nie byłyby w stanie ze sobą komunikować, co uniemożliwiłoby wykonywanie zadań przez system. ",-1),Gn=[xn],Qn=(0,n._)("h1",null,"Wymienić podstawowe elementy skladowe procesora.",-1),Xn=[Qn],Hn=(0,n.uE)("<li>Jednostka arytmetyczno-logiczna (ALU)</li><p>wykonuje operacje arytmetyczne i logiczne na danych,</p><li>rejestr instrukcji</li><p>przechowuje aktualnie wykonywaną instrukcję,</p><li>rejestr licznika instrukcji</li><p> zawiera adres pamięci, z którego pobierana jest następna instrukcja, </p><li>rejestry ogólnego przeznaczenia</li><p>przechowują dane tymczasowo używane przez procesor,</p><li>kontroler przerwań</li><p> odpowiada za obsługę przerwań zewnętrznych (np. od urządzeń peryferyjnych), </p><li>jednostka zarządzania pamięcią</li><p>zarządza operacjami odczytu i zapisu do pamięci,</p><li>jednostka zarządzania wejściami/wyjściami</li><p>obsługuje komunikację z urządzeniami peryferyjnymi.</p>",14),Vn=[Hn],Yn=(0,n._)("h1",null,"Jakie są podstawowe kategorie rozkazów procesora?",-1),$n=[Yn],ar=(0,n.uE)("<li>Rozkazy transferu danych</li><p>np. kopiowanie, przesyłanie danych)</p><li>Rozkazy arytmetyczno-logiczne</li><p>(np. dodawanie, mnożenie, porównanie)</p><li>Rozkazy skoku</li><p>(np. warunkowy lub bezwarunkowy skok do innej części programu)</p><li>Rozkazy wejścia/wyjścia</li><p> (np. przesyłanie danych z/do pamięci zewnętrznej lub urządzeń wejścia/wyjścia) </p><li>Rozkazy sterujące</li><p>(np. resetowanie procesora, zmiana trybu działania)</p>",10),er=[ar],ir=(0,n._)("h1",null,"Na czym polega rekursja w wywoływaniu funkcji?",-1),or=[ir],nr=(0,n._)("p",null," Rekursja to technika programowania, która polega na wywoływaniu funkcji samej w sobie. W czasie wykonywania programu, gdy funkcja jest wywoływana, może ona sama wywołać siebie, co prowadzi do kolejnego wywołania, aż do osiągnięcia określonego warunku końcowego. Warunek końcowy jest ważny, ponieważ zapobiega nieskończonemu wywoływaniu funkcji i prowadzi do powrotu wartości zwracanej przez funkcję na wyższy poziom. Przykładem zastosowania rekursji może być np. obliczanie silni, sumy ciągu lub drzewa binarnego. ",-1),rr=[nr],wr=(0,n._)("h1",null,"Co to jest Abstrakcyjny Typ Danych (ADT)?",-1),zr=[wr],sr=(0,n._)("p",null," Abstrakcyjny Typ Danych (ADT) to model matematyczny lub konceptualny, który opisuje zbiór danych i operacji, które można wykonywać na tych danych. ADT ukrywa implementację danych, skupiając się na ich funkcjonalności i zachowaniu. Jest to ważne narzędzie programistyczne, które umożliwia tworzenie skomplikowanych struktur danych, a jednocześnie ułatwia ich użytkowanie i zapewnia izolację od pozostałych elementów programu. ",-1),dr=[sr],lr=(0,n._)("h1",null,"Co to jest struktura danych?",-1),tr=[lr],yr=(0,n._)("p",null," Wyszukiwanie binarne to algorytm służący do odnalezienia wartości w uporządkowanej tablicy. Polega na porównywaniu szukanej wartości z wartością środkowego elementu tablicy, a następnie porównywaniu z połowami tablicy, aż do odnalezienia szukanej wartości lub stwierdzenia, że nie występuje w tablicy. Dzięki temu algorytmowi można znacznie przyspieszyć proces wyszukiwania, szczególnie dla dużych zbiorów danych. ",-1),cr=[yr],kr=(0,n._)("h1",null," Definicje, rola, zadania systemu operacyjnego. Kryteria klasyfikacyjne systemów operacyjnych. ",-1),pr=[kr],ur=(0,n.uE)("<p> System operacyjny to podstawowe oprogramowanie, które zarządza zasobami sprzętowymi i pozwala użytkownikom na wykonywanie zadań. System operacyjny pełni kilka ról, m.in. zapewnia interfejs użytkownika, zarządza pamięcią, plikami, wejściami/wyjściami oraz wykonuje rozkazy. </p><p>Zadania systemu operacyjnego to m.in.:</p><li> zarządzanie pamięcią, plikami, procesami, urządzeniami wejścia/wyjścia; </li><li>obsługa zdarzeń i błędów;</li><li>optymalizacja wykorzystania zasobów sprzętowych;</li><li>zapewnienie bezpieczeństwa i poufności danych;</li><li> udostępnianie interfejsów programistycznych (API) dla twórców aplikacji. </li><p>Kryteria klasyfikacyjne systemów operacyjnych to m.in.:</p><li>tryb pracy systemu (jeden lub kilka trybów);</li><li>rodzaj zarządzania procesami (procesy jedno- lub wielozadaniowe);</li><li>model pamięci (jeden lub wieloprogramowy);</li><li>stopień zdecentralizowania (monolityczny, mikrojądro, hybrydowy);</li><li>rodzaj systemu plików (lokalny, sieciowy);</li><li> typ architektury sprzętowej (komputer osobisty, serwer, system wbudowany). </li>",14),mr=[ur],jr=(0,n._)("h1",null,"Założenia architektury Johna von Neumanna.",-1),_r=[jr],br=(0,n._)("li",null,"Jednolitą pamięć dla danych i programów.",-1),hr=(0,n._)("li",null,"Procesor wykonujący sekwencyjnie instrukcje pobierane z pamięci.",-1),gr=(0,n._)("li",null," Zastosowanie skończonej liczby prostych instrukcji, które mogą wykonywać operacje arytmetyczne, logiczne oraz operacje wejścia/wyjścia. ",-1),fr=(0,n._)("li",null," Zastosowanie jednolitego systemu adresacji, który pozwala na odwoływanie się do dowolnej komórki pamięci za pomocą jednej liczby (adresu). ",-1),Cr=[br,hr,gr,fr],vr=(0,n._)("h1",null,"Zarządzanie pamięcią operacyjną. Pamięć wirtualna",-1),Mr=[vr],Pr=(0,n._)("p",null," Zarządzanie pamięcią operacyjną to proces, w którym system operacyjny zarządza pamięcią RAM w celu efektywnego alokowania, dealokowania i udostępniania pamięci dla programów. System operacyjny używa pamięci operacyjnej do przechowywania programów i danych, które są aktualnie wykonywane. ",-1),Sr=(0,n._)("p",null," Pamięć wirtualna to technika zarządzania pamięcią operacyjną, która umożliwia programom używanie więcej pamięci, niż jest fizycznie dostępne w RAM. Pamięć wirtualna tworzy wirtualny adres pamięci, który mapowany jest na fizyczny adres pamięci, kiedy dany fragment pamięci jest potrzebny. Dzięki temu programy mają dostęp do większej ilości pamięci niż jest faktycznie dostępne w pamięci RAM. System operacyjny kontroluje ten proces mapowania, aby zapewnić, że programy nie korzystają z pamięci, która jest już zajęta lub nieprzydzielona. ",-1),Or=[Pr,Sr],Wr=(0,n._)("h1",null,"Planowanie przydziału procesora -szeregowanie zadań.",-1),qr=[Wr],Dr=(0,n._)("p",null," Planowanie przydziału procesora (ang. CPU scheduling) to proces decydujący o przydziale czasu procesora dla zadań w systemie operacyjnym. Jednym z podejść jest szeregowanie zadań, czyli ustalanie kolejności wykonywania zadań w kolejce. ",-1),Ar=(0,n._)("p",null," Szeregowanie zadań to proces, w którym system operacyjny wybiera kolejność wykonywania zadań, aby zapewnić, że wszystkie zadania są wykonywane w odpowiednim czasie. System operacyjny używa szeregowania zadań do zarządzania procesorami w celu zapewnienia, że programy są wykonywane w odpowiednim czasie. ",-1),Ir=[Dr,Ar],Er=(0,n._)("h1",null,"Przetwarzanie wspólbieżne i synchronizacja procesów.",-1),Rr=[Er],Tr=(0,n._)("p",null," Przetwarzanie współbieżne to technika przetwarzania danych, w której wiele zadań wykonywanych jest jednocześnie, a procesy komunikują się ze sobą i koordynują swoje działania. W celu zapewnienia poprawności przetwarzania, konieczna jest synchronizacja procesów, czyli koordynacja ich wykonywania tak, aby uniknąć niepożądanych efektów, takich jak wyścigi (ang. race conditions) czy zakleszczenia (ang. deadlock). ",-1),Nr=(0,n._)("p",null," Synchronizacja procesów polega na stosowaniu technik, które zapewniają poprawne wykonywanie zadań przez procesy. Do najważniejszych technik należą semafory, muteksy, zmienne warunkowe, a także algorytmy wzajemnego wykluczania, takie jak algorytm Petersona czy Dekkera. Celem synchronizacji procesów jest zapewnienie spójności danych i uniknięcie konfliktów między procesami, a także efektywne wykorzystanie zasobów systemowych. ",-1),Lr=[Tr,Nr],Fr=(0,n._)("h1",null," Wymień podział języków programowania na trzy stopnie. Wyjaśnij też pojęcia translacja, kompilacja, interpretacja. ",-1),Zr=[Fr],Jr=(0,n.uE)("<li>Języki niskiego poziomu</li><p> Są bliskie językowi maszynowemu i umożliwiają bezpośrednie wykorzystanie zasobów komputera. </p><li>Języki średniego poziomu</li><p> Stanowią połączenie między językami niskiego i wysokiego poziomu. Umożliwiają one programowanie na niższym poziomie abstrakcji niż języki wysokiego poziomu, ale jednocześnie są łatwiejsze w użyciu niż języki niskiego poziomu. </p><li>Języki wysokiego poziomu</li><p> Są najbardziej abstrakcyjne i pozwalają na pisanie kodu w sposób bardziej zrozumiały dla człowieka. Zazwyczaj są one łatwiejsze w użyciu niż języki niskiego i średniego poziomu, ale jednocześnie mogą być mniej wydajne. </p><li>Translacja</li><p> Proces przekształcania kodu źródłowego napisanego w jednym języku programowania na kod wynikowy w innym języku programowania. </p><li>Kompilacja</li><p> Proces przekształcania kodu źródłowego napisanego w języku programowania na kod maszynowy, który jest bezpośrednio wykonywany przez komputer. </p><li>Interpretacja</li><p> Proces bezpośredniego wykonywania kodu źródłowego programu przez interpreter. Interpreter przetwarza kod źródłowy na bieżąco i wykonuje go, zamiast kompilować kod na etapie przed uruchomieniem. </p>",12),Br=[Jr],Ur=(0,n._)("h1",null,"Pojęcie programowania. Etapy programowania proceduralnego.",-1),Kr=[Ur],xr=(0,n.uE)("<p> Programowanie to proces tworzenia programów komputerowych, czyli zbiór instrukcji i procedur wykonujących określone zadania. </p><p>Etapy programowania proceduralnego:</p><li>Analiza problemu</li><p> Polega na zrozumieniu, co ma zrobić program, jakie są wymagania, jakie dane wejściowe i wyjściowe są potrzebne itp. </p><li>Projektowanie</li><p> Na tym etapie projektuje się algorytmy i struktury danych, które zostaną użyte w programie, aby spełnić wymagania. </p><li>Kodowanie</li><p>Implementacja algorytmów i struktur danych w języku programowania.</p><li>Testowanie</li><p> Sprawdzenie, czy program działa poprawnie, czy generuje oczekiwane wyniki, czy obsługuje wszelkie możliwe przypadki. </p><li>Wdrażanie</li><p>Instalacja programu i dostarczenie go użytkownikowi.</p>",12),Gr=[xr],Qr=(0,n._)("h1",null,"Przekazywanie argumentów do funkcji w C++",-1),Xr=[Qr],Hr=(0,n._)("p",null," Przekazywanie argumentów do funkcji w C++ odbywa się przez wartość, wskaźnik lub referencję. Przekazywanie przez wartość powoduje utworzenie kopii argumentu, która jest przekazywana do funkcji. Przekazywanie przez wskaźnik powoduje przekazanie adresu argumentu do funkcji, co pozwala na modyfikowanie wartości argumentu w funkcji. Przekazywanie przez referencję to inny sposób przekazywania argumentów przez odwołanie się do oryginalnego argumentu, co pozwala na modyfikację wartości argumentu bez tworzenia jego kopii. ",-1),Vr=[Hr],Yr=(0,n._)("h1",null,"Wymień kolejne techniki programowania.",-1),$r=[Yr],aw=(0,n.uE)("<li>Programowanie strukturalne</li><p> opiera się na stosowaniu strukturalnych metod projektowania i programowania. </p><li>Programowanie obiektowe</li><p> opiera się na idei tworzenia obiektów, które są instancjami klas i mają określone właściwości i metody. </p><li>Programowanie funkcyjne</li><p> opiera się na wykorzystaniu funkcji jako podstawowej jednostki programowej, wraz z zapewnieniem odpowiedniego sposobu przekazywania argumentów i wyników. </p><li>Programowanie zdarzeniowe</li><p> opiera się na obsłudze zdarzeń, które mogą być generowane przez użytkownika, system lub inne aplikacje. </p><li>Programowanie reaktywne</li><p> opiera się na reakcjach na zmiany stanu aplikacji, zamiast na sekwencyjnym przetwarzaniu instrukcji. </p><li>Programowanie współbieżne</li><p> opiera się na równoczesnym wykonywaniu wielu wątków lub procesów, w celu zwiększenia wydajności i responsywności systemu. </p>",12),ew=[aw],iw=(0,n._)("h1",null,"Podstawowe zasady OOP (Object Oriented Programming).",-1),ow=[iw],nw=(0,n._)("li",null,"Abstrakcja",-1),rw=(0,n._)("p",null," umożliwia ukrycie szczegółów implementacji i skupienie się na istotnych aspektach obiektów. ",-1),ww=(0,n._)("li",null,"Dziedziczenie",-1),zw=(0,n._)("p",null," umożliwia tworzenie hierarchii klas i dziedziczenie właściwości i metod po klasach nadrzędnych. ",-1),sw=(0,n._)("li",null,"Enkapsulacja",-1),dw=(0,n._)("p",null," umożliwia wielokrotne wykorzystanie kodu poprzez zastosowanie różnych implementacji dla tych samych metod w różnych klasach. ",-1),lw=(0,n._)("li",null,"Polimorfizm",-1),tw=(0,n._)("p",null," umożliwia ukrycie danych i metod wewnątrz klasy i zezwala na dostęp do nich tylko poprzez odpowiednie interfejsy. ",-1),yw=[nw,rw,ww,zw,sw,dw,lw,tw],cw=(0,n._)("h1",null,"Klasy, obiekty. Formalna składnia definiowania klasy.",-1),kw=[cw],pw=(0,n._)("p",null," Klasa to szablon lub wzorzec, na podstawie którego tworzone są konkretne obiekty. Obiekt to instancja klasy, która ma swoje własne cechy (pola) i zachowania (metody). ",-1),uw=[pw],mw=(0,n._)("h1",null,"WKonstruktory, destruktory i ich zadania.",-1),jw=[mw],_w=(0,n._)("li",null,"Konstruktor",-1),bw=(0,n._)("p",null," metoda wywoływana podczas tworzenia nowego obiektu danej klasy. Jego zadaniem jest przygotowanie obiektu do dalszego działania i inicjalizacja pól obiektu, np. ustalenie początkowych wartości pól. ",-1),hw=(0,n._)("li",null,"Destruktor",-1),gw=(0,n._)("p",null," metoda wywoływana automatycznie, gdy obiekt danej klasy jest usuwany z pamięci. Jego zadaniem jest zwolnienie zasobów zajmowanych przez obiekt, takich jak pamięć dynamiczna czy otwarte pliki. W C++ destruktor ma nazwę taką samą jak nazwa klasy, poprzedzoną znakiem tyldy (~). ",-1),fw=[_w,bw,hw,gw],Cw=(0,n._)("h1",null,"Operatory odwołania do składowych obiektu. Podać przyklady.",-1),vw=[Cw],Mw=(0,n._)("p",null,' Operator odwołania do składowych obiektu w języku C++ to operator "->", który służy do dostępu do składowych obiektu poprzez wskaźnik na ten obiekt. Przykład użycia operatora "->" to np. dostęp do pola "age" obiektu klasy Person poprzez wskaźnik na ten obiekt: ',-1),Pw=(0,n._)("code",null,"Person *personPtr = new Person(); personPtr->age = 30;",-1),Sw=(0,n._)("p",null,"w innych językach uywa się np obiek.nazwa_zmiennej",-1),Ow=[Mw,Pw,Sw],Ww=(0,n._)("h1",null," Omówić platforme NET Framework. Czy .NET Framework jest związana z konkretnym językiem programowania? ",-1),qw=[Ww],Dw=(0,n._)("p",null," .NET Framework to platforma programistyczna opracowana przez firmę Microsoft. Zapewnia narzędzia i biblioteki programistyczne do tworzenia aplikacji na systemy Windows. Platforma .NET Framework składa się z ogólnego środowiska uruchomieniowego (Common Language Runtime - CLR), które obsługuje kompilację kodu do języka pośredniego (IL - Intermediate Language) oraz obsługuje zarządzanie pamięcią, wątkami, bezpieczeństwem i innymi kwestiami systemowymi. ",-1),Aw=(0,n._)("p",null," Platforma .NET Framework jest niezależna od języka programowania, co oznacza, że można pisać kod w różnych językach, takich jak C#, Visual Basic.NET, F#, C++/CLI czy IronPython, a następnie ten kod może być uruchomiony w środowisku CLR. Dlatego .NET Framework jest nazywany platformą wielojęzykową. ",-1),Iw=[Dw,Aw],Ew=(0,n._)("h1",null,"Co oznacza akronim RAD? Podać przykłady środowisk RAD.",-1),Rw=[Ew],Tw=(0,n._)("p",null," Akronim RAD oznacza Rapid Application Development, czyli metodę szybkiego tworzenia aplikacji. Metoda ta zakłada szybkie tworzenie prototypów, iteracyjne testowanie i udzielanie szybkiej odpowiedzi na zmiany. ",-1),Nw=(0,n._)("p",null,"Przykładowe środowiska RAD to:",-1),Lw=(0,n._)("li",null,"Microsoft Visual Studio",-1),Fw=(0,n._)("li",null,"Xcode",-1),Zw=(0,n._)("li",null,"IntelliJ IDEA",-1),Jw=[Tw,Nw,Lw,Fw,Zw],Bw=(0,n._)("h1",null," Przykładowe problemy optymalizacyjne w zagadnieniach programowania liniowego. Metoda Simpleks. ",-1),Uw=[Bw],Kw=(0,n._)("li",null,"Problemy alokacji zasobów",-1),xw=(0,n._)("p",null," jak zoptymalizować alokację surowców lub kosztów pracy, tak aby osiągnąć maksymalny zysk lub minimalny koszt. ",-1),Gw=(0,n._)("li",null,"Problemy transportowe",-1),Qw=(0,n._)("p",null," jak zoptymalizować koszty transportu, tak aby produkty dotarły do celu w minimalnym czasie i przy minimalnych kosztach. ",-1),Xw=(0,n._)("li",null,"Problemy produkcji:",-1),Hw=(0,n._)("p",null," jak zoptymalizować proces produkcyjny, tak aby zminimalizować koszty produkcji i zwiększyć zyski. ",-1),Vw=(0,n._)("p",null," Metoda Simpleks to jedna z najczęściej stosowanych metod rozwiązywania problemów programowania liniowego. Polega na iteracyjnym przeszukiwaniu wierzchołków wielościanu, który jest ograniczony przez nierówności. W każdej iteracji algorytm wybiera kolejny wierzchołek, który ma lepszą wartość funkcji celu i porusza się w kierunku wierzchołka, który daje lepsze wyniki. Proces kończy się, gdy nie ma już wierzchołków dających lepsze wyniki, co oznacza, że zostało znalezione rozwiązanie optymalne. ",-1),Yw=[Kw,xw,Gw,Qw,Xw,Hw,Vw],$w=(0,n._)("h1",null,"Omówić możliwości narzędzia Solver arkusza kalkulacyjnego Excel",-1),az=[$w],ez=(0,n._)("p",null," Solver to narzędzie dostępne w arkuszu kalkulacyjnym Excel, służące do rozwiązywania problemów optymalizacyjnych. Możliwe do rozwiązania problemy obejmują optymalizację liniową, nieliniową, dyskretną oraz z ograniczeniami równościowymi lub nierównościowymi. Solver wykorzystuje algorytm Simpleksa do znalezienia optymalnego rozwiązania. Użytkownik może zdefiniować cel optymalizacji, zmienne decyzyjne, ograniczenia i inne parametry, a Solver wyznaczy wartości zmiennych decyzyjnych, które optymalizują cel. Solver jest przydatny w wielu dziedzinach, w tym w biznesie, finansach, inżynierii i naukach społecznych. ",-1),iz=[ez],oz=(0,n._)("h1",null,"omów Problem komiwojażera",-1),nz=[oz],rz=(0,n._)("p",null," Problem komiwojażera (ang. Traveling Salesman Problem, TSP) jest jednym z klasycznych problemów optymalizacyjnych w informatyce. Polega on na znalezieniu najkrótszej drogi przechodzącej przez wszystkie wierzchołki w pełnym grafie ważonym, tak aby każdy wierzchołek był odwiedzony dokładnie raz i zakończyła się wierzchołkiem startowym ",-1),wz=[rz],zz=(0,n._)("h1",null," Algorytm, cechy algorytmu, struktury sterujące przebiegiem algorytmu, schemat blokowy. ",-1),sz=[zz],dz=(0,n._)("p",null," Algorytm to skończony zestaw precyzyjnych instrukcji krok po kroku, które pozwalają na rozwiązanie określonego problemu lub zadania. Algorytm powinien mieć określone cechy, takie jak precyzyjność, wykonywalność, skończoność i determinizm. ",-1),lz=(0,n._)("p",null," Struktury sterujące przebiegiem algorytmu to elementy, które pozwalają na wykonywanie określonych działań w zależności od określonych warunków. Wyróżniamy między innymi instrukcje warunkowe (if, switch), pętle (while, for, do-while), instrukcje skoku (break, continue, return) oraz funkcje. ",-1),tz=(0,n._)("p",null," Schemat blokowy to graficzne przedstawienie algorytmu, w którym poszczególne instrukcje są zapisane jako bloki o określonych kształtach, połączone strzałkami wskazującymi na kolejność wykonywania instrukcji. Schemat blokowy pozwala na łatwiejsze zrozumienie algorytmu i jego przebiegu, a także na łatwiejsze wprowadzenie ewentualnych zmian czy modyfikacji. ",-1),yz=[dz,lz,tz],cz=(0,n._)("h1",null,"omów Złożoność obliczeniowa algorytmu",-1),kz=[cz],pz=(0,n._)("p",null," Złożoność obliczeniowa algorytmu to miara, która określa, jak szybko rośnie czas wykonania algorytmu wraz z rozmiarem problemu. Czas ten jest zwykle mierzony w liczbie operacji elementarnych, które muszą zostać wykonane przez algorytm. ",-1),uz=[pz],mz=(0,n._)("h1",null," Przykładowe algorytmy sortujące. Porównanie ich złożoności czasowej. ",-1),jz=[mz],_z=(0,n._)("li",null,"Sortowanie bąbelkowe (Bubble sort)",-1),bz=(0,n._)("p",null," porównuje sąsiednie elementy i zamienia je, jeśli nie są w kolejności. Ma złożoność O(n^2) i jest stosunkowo wolny dla większych zbiorów danych. ",-1),hz=(0,n._)("li",null,"Sortowanie przez wstawianie (Insertion sort)",-1),gz=(0,n._)("p",null," przechodzi przez każdy element i umieszcza go w odpowiedniej pozycji w posortowanej już części tablicy. Ma złożoność O(n^2) i działa szybciej niż sortowanie bąbelkowe. ",-1),fz=(0,n._)("li",null,"Sortowanie szybkie (Quick sort)",-1),Cz=(0,n._)("p",null," wybiera jeden element jako punkt odniesienia (tzw. pivot), porównuje pozostałe elementy z pivotem i umieszcza je po odpowiedniej stronie. Następnie wykonuje ten sam proces dla obu połówek tablicy. Ma złożoność O(n log n) i działa szybko dla większych zbiorów danych. ",-1),vz=[_z,bz,hz,gz,fz,Cz],Mz=(0,n._)("h1",null,"Przykładowe dynamiczne struktury danych.",-1),Pz=[Mz],Sz=(0,n.uE)("<li>Lista</li><p> struktura umożliwiająca przechowywanie danych w postaci ciągu elementów, które są połączone ze sobą wskaźnikami. </p><li>Stos</li><p> struktura LIFO (Last-In-First-Out), w której nowe elementy dodawane są na wierzch, a usuwanie elementów odbywa się również od wierzchu. </p><li>Kolejka</li><p> struktura FIFO (First-In-First-Out), w której nowe elementy dodawane są na końcu, a usuwanie elementów odbywa się z początku. </p><li>Drzewo</li><p> struktura, w której każdy element ma jednego lub więcej potomków, tworząc drzewiastą strukturę. </p><li>Graf</li><p> struktura, w której elementy są połączone ze sobą krawędziami, tworząc graficzny model. </p>",10),Oz=[Sz],Wz=(0,n._)("h1",null," Dane, informacje, przetwarzanie danych, przetwarzanie informacji.. ",-1),qz=[Wz],Dz=(0,n._)("p",null," Dane to nieprzetworzone informacje, które posiadają pewną wartość i znaczenie. Przetwarzanie danych to operacje wykonywane na danych, które zmieniają ich postać, organizację lub zawartość, aby uzyskać bardziej wartościowe informacje. Przetwarzanie informacji natomiast to wykorzystywanie uzyskanych informacji w celu podejmowania decyzji lub podejmowania działań. ",-1),Az=(0,n._)("p",null," Przetwarzanie danych jest procesem transformacji danych w informacje, a przetwarzanie informacji jest procesem transformacji informacji w wiedzę, co pozwala na podejmowanie decyzji lub realizowanie działań. ",-1),Iz=[Dz,Az],Ez=(0,n._)("h1",null," Podstawowe założenie ilościowej teorii informacji. Jednostka informacji. Entropia informacyjna. ",-1),Rz=[Ez],Tz=(0,n._)("p",null," Podstawowe założenie ilościowej teorii informacji mówi, że informacja jest związana z redukcją niepewności lub entropii. Teoria informacji bada sposób, w jaki przekazywana jest informacja, w jaki sposób informacja jest kodowana, przetwarzana, przesyłana i odbierana. Jednostką informacji jest bit, który może przyjąć dwie wartości: 0 lub 1. Entropia informacyjna to miara informacji zawartej w danym zbiorze lub źródle informacji. Im większa entropia, tym większa niepewność co do treści informacji, a tym samym większa ilość informacji zawarta w tym źródle. Entropia może być wykorzystywana do określania efektywności kodowania informacji, gdzie im mniejsza entropia, tym mniej bitów potrzebnych do reprezentowania informacji. ",-1),Nz=[Tz],Lz=(0,n._)("h1",null," Dwuznakowe kodowanie komunikatów. Średnia długość słowa kodowego. Pojęcie i znaczenie redundancji sposobu kodowania. Kod zwarty. ",-1),Fz=[Lz],Zz=(0,n._)("p",null,' Dwuznakowe kodowanie komunikatów to sposób kodowania informacji, w którym każdy symbol jest kodowany za pomocą sekwencji dwóch znaków (np. "0" i "1"). Średnia długość słowa kodowego w tym kodowaniu zależy od prawdopodobieństwa wystąpienia danego symbolu - im mniejsze prawdopodobieństwo, tym dłuższa sekwencja dwuznakowa potrzebna jest do zakodowania symbolu. ',-1),Jz=(0,n._)("p",null,' Dwuznakowe kodowanie komunikatów to sposób kodowania informacji, w którym każdy symbol jest kodowany za pomocą sekwencji dwóch znaków (np. "0" i "1"). Średnia długość słowa kodowego w tym kodowaniu zależy od prawdopodobieństwa wystąpienia danego symbolu - im mniejsze prawdopodobieństwo, tym dłuższa sekwencja dwuznakowa potrzebna jest do zakodowania symbolu. Entropia informacyjna to teoretyczna dolna granica średniej długości słowa kodowego, która jest osiągana przy optymalnym kodowaniu z zachowaniem odpowiedniego prawdopodobieństwa wystąpienia symboli. ',-1),Bz=(0,n._)("p",null," Redundancja sposobu kodowania oznacza, że w kodowaniu używa się więcej znaków, niż jest to konieczne do zakodowania informacji. Kod zwarty to taki kod, w którym nie ma redundancji i jest optymalny w sensie minimalnej średniej długości słowa kodowego. ",-1),Uz=[Zz,Jz,Bz],Kz=(0,n._)("h1",null," Arytmetyka binama. Uzupełnienia i odejmowanie przy pomocy uzupelnień. Definicje kodów liczb. ",-1),xz=[Kz],Gz=(0,n._)("li",null,"Arytmetyka binarn",-1),Qz=(0,n._)("p",null," system matematyczny, który operuje na liczbach zapisanych w systemie dwójkowym. W tym systemie posługujemy się jedynie dwoma cyframi: 0 i 1. W arytmetyce binarnej stosuje się uzupełnienia, czyli metody reprezentowania liczb ujemnych. ",-1),Xz=(0,n._)("p",null," Uzupełnienie do dwóch to najprostszy sposób reprezentacji liczb ujemnych. Polega on na uzupełnieniu liczby binarnej do 1, dodaniu 1 i zapisaniu wyniku w postaci binarnej. Natomiast uzupełnienie do jedynki to metoda, w której każdy bit liczby binarnej jest zamieniany na przeciwny i do wyniku dodawana jest 1. ",-1),Hz=(0,n._)("p",null," W arytmetyce binarnej do dodawania liczb stosuje się dodawanie bitowe. Natomiast odejmowanie można przeprowadzić przy pomocy uzupełnień. ",-1),Vz=(0,n._)("p",null," W kodach liczb stosowane są różne sposoby kodowania liczb, np. kod binarny, kod uzupełnień do dwóch, kod uzupełnień do jedynki. Każdy z tych kodów ma swoje charakterystyczne cechy, np. kod uzupełnień do dwóch jest prostszy do implementacji w sprzęcie, natomiast kod uzupełnień do jedynki pozwala na wykonanie operacji dodawania i odejmowania bez konieczności wykonywania operacji zamiany znaku. ",-1),Yz=(0,n._)("p",null," Kod zwarty to metoda kodowania, w której stosuje się kod o stałej długości, niezależnej od wartości kodowanej liczby. W wyniku tej metody otrzymuje się mniejszą redundancję kodu, ale wymaga to większej liczby bitów w przypadku większych liczb. ",-1),$z=[Gz,Qz,Xz,Hz,Vz,Yz],as=(0,n._)("h1",null," Logika binama. Funkcje boolowskie. Cyfrowe układy logiczne. Półsumator, sumator. ",-1),es=[as],is=(0,n._)("li",null,"Logika binarna",-1),os=(0,n._)("p",null," dziedzina matematyki zajmująca się operacjami na dwóch wartościach logicznych: prawda (1) i fałsz (0). Funkcje boolowskie to matematyczne wyrażenia, które przyjmują wartości 0 lub 1 w zależności od wartości wejściowych. ",-1),ns=(0,n._)("li",null,"Cyfrowe układy logiczne",-1),rs=(0,n._)("p",null," zestawy bramek logicznych, wykonujących określone operacje na danych binarnych. Półsumator to podstawowy układ logiczny, który dodaje dwie jednobitowe liczby. Sumator to bardziej zaawansowany układ, który pozwala na dodawanie wielobitowych liczb. ",-1),ws=(0,n._)("p",null," W cyfrowych układach logicznych wykorzystuje się także bramki logiczne, takie jak np. bramki AND, OR, NOT, NAND, NOR, XOR, XNOR. Te bramki umożliwiają wykonywanie różnych operacji logicznych, a także budowanie bardziej skomplikowanych układów, takich jak rejestr przesuwny, licznik, czy też procesor. ",-1),zs=[is,os,ns,rs,ws],ss=(0,n._)("h1",null," Języki formalne. Klasyfikacja Chomsky'ego gramatyk formalnych. Gramatyki bezkontekstowe. Notacja BNF. ",-1),ds=[ss],ls=(0,n._)("p",null," Języki formalne to matematyczny sposób opisu języków. Klasyfikacja Chomsky'ego to podział na 4 typy gramatyk formalnych, od najmniej do najbardziej ograniczających. Gramatyki bezkontekstowe należą do klasy drugiej, a ich reguły opisują związki między symbolami, bez rozróżnienia ich kontekstu. Notacja BNF (Backus-Naur Form) to forma zapisu gramatyk bezkontekstowych, składająca się z reguł zdefiniowanych jako produkcje. ",-1),ts=[ls],ys=(0,n._)("h1",null,"Przykłady zastosowania pochodnej funkcji liczbowej.",-1),cs=[ys],ks=(0,n._)("li",null," Obliczanie wartości ekstremów funkcji, tj. miejsc, w których funkcja osiąga maksimum lub minimum. ",-1),ps=(0,n._)("li",null," Określanie monotoniczności funkcji, czyli w których przedziałach jest ona rosnąca lub malejąca. ",-1),us=(0,n._)("li",null," Obliczanie wartości pochodnych wyższych rzędów, które pozwalają na analizę bardziej skomplikowanych zachowań funkcji. ",-1),ms=(0,n._)("li",null," Wykorzystanie pochodnej do obliczania przybliżonej wartości funkcji w okolicy danego punktu. ",-1),js=(0,n._)("li",null," Zastosowanie w mechanice jako pochodna położenia względem czasu, pozwalająca na obliczanie prędkości, przyspieszenia i innych parametrów ruchu. ",-1),_s=(0,n._)("li",null," Zastosowanie w ekonomii i finansach do obliczania stóp zwrotu z inwestycji, szybkości wzrostu i spadku produkcji itp. ",-1),bs=[ks,ps,us,ms,js,_s],hs=(0,n._)("h1",null,"Przykłady zastosowania calki oznaczonej.",-1),gs=[hs],fs=(0,n._)("li",null," Obliczanie dystansu przebytego przez ciało: jeśli znamy prędkość ciała w każdym momencie, to możemy obliczyć drogę, jaką przebyło na danym odcinku czasu poprzez obliczenie całki oznaczonej prędkości. ",-1),Cs=(0,n._)("li",null," Obliczanie pracy wykonywanej przez siłę: jeśli znamy wartość siły działającej na ciało w każdym momencie, to możemy obliczyć pracę wykonaną przez tę siłę na danym odcinku drogi poprzez obliczenie całki oznaczonej siły. ",-1),vs=(0,n._)("li",null," Obliczanie całkowitej wartości funkcji: jeśli znamy funkcję, to możemy obliczyć całkowitą wartość tej funkcji na danym odcinku poprzez obliczenie całki oznaczonej tej funkcji. ",-1),Ms=[fs,Cs,vs],Ps=(0,n._)("h1",null,"Macierze i przykłady ich zastosowania.",-1),Ss=[Ps],Os=(0,n._)("p",null," Macierze to tablice liczb o określonej liczbie wierszy i kolumn, które są wykorzystywane do reprezentowania i manipulowania danymi numerycznymi lub algebraicznymi. ",-1),Ws=(0,n._)("li",null,"Rozwiązywanie układów równań liniowych",-1),qs=(0,n._)("li",null,"Transformacja geometryczna obiektów w grafice komputerowej",-1),Ds=(0,n._)("li",null,"Analiza sieci społecznych lub sieci przemysłowych",-1),As=(0,n._)("li",null,"Kryptografia i szyfrowanie danych",-1),Is=(0,n._)("li",null,"Analiza danych statystycznych i eksploracja danych",-1),Es=(0,n._)("li",null,"Mechanika kwantowa i obliczenia numeryczne",-1),Rs=[Os,Ws,qs,Ds,As,Is,Es],Ts=(0,n._)("h1",null,"Znaczenie rozkladu normalnego.",-1),Ns=[Ts],Ls=(0,n._)("p",null," Rozkład normalny, zwany również rozkładem Gaussa, jest jednym z najważniejszych rozkładów prawdopodobieństwa w statystyce. Charakteryzuje się krzywą o kształcie dzwonu, w którym średnia, mediana i moda mają taką samą wartość. Wiele zjawisk w przyrodzie i społeczeństwie ma rozkład zbliżony do normalnego, co umożliwia wykorzystanie tego rozkładu do modelowania tych zjawisk i przewidywania ich zachowania w przyszłości. Rozkład normalny jest również kluczowy w teorii błędów pomiarowych i inferencji statystycznej. ",-1),Fs=[Ls];function Zs(a,e,i,o,w,s){return(0,n.wg)(),(0,n.iD)("div",{class:(0,r.C_)({"dark-mode":w.darkMode})},[(0,n._)("button",{onClick:e[0]||(e[0]=a=>w.darkMode=!w.darkMode)},"💡"),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},z,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},p,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},m,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},v,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},P,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},E,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},T,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},K,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},G,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},X,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},V,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},$,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ea,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},ta,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ca,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},pa,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ma,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},_a,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ha,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},fa,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},va,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ea,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ta,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ka,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ga,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},ae,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ie,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},le,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ye,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},be,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ge,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},qe,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ae,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ee,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Te,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Le,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ze,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Be,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ke,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ge,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Xe,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ye,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ai,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},ii,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ni,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},zi,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},di,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},ti,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ci,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},gi,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ci,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Mi,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Si,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Wi,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Di,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ii,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ri,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ni,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Fi,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ji,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ui,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Vi,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},$i,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},eo,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},oo,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},ro,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},zo,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},lo,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},yo,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},ho,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},fo,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},vo,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Po,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Oo,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},qo,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ao,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Eo,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},To,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Lo,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Qo,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ho,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Yo,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},an,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},on,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},rn,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},zn,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},dn,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},tn,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},cn,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},pn,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},mn,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},_n,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},hn,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},On,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},qn,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Rn,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Nn,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Bn,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Kn,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Gn,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Xn,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Vn,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},$n,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},er,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},or,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},rr,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},zr,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},dr,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},tr,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},cr,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},pr,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},mr,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},_r,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Cr,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Mr,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Or,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},qr,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ir,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Rr,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Lr,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Zr,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Br,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Kr,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Gr,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Xr,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Vr,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},$r,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},ew,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ow,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},yw,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},kw,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},uw,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},jw,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},fw,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},vw,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ow,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},qw,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Iw,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Rw,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Jw,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Uw,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Yw,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},az,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},iz,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},nz,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},wz,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},sz,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},yz,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},kz,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},uz,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},jz,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},vz,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Pz,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Oz,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},qz,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Iz,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Rz,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Nz,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Fz,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Uz,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},xz,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},$z,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},es,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},zs,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},ds,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},ts,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},cs,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},bs,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},gs,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Ms,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ss,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Rs,2),(0,n._)("div",{class:(0,r.C_)(["question",{"dark-mode":w.darkMode}])},Ns,2),(0,n._)("div",{class:(0,r.C_)(["answer",{"dark-mode":w.darkMode}])},Fs,2)],2)}var Js={name:"App",data(){return{darkMode:!0}}},Bs=i(89);const Us=(0,Bs.Z)(Js,[["render",Zs]]);var Ks=Us;(0,o.ri)(Ks).mount("#app")}},e={};function i(o){var n=e[o];if(void 0!==n)return n.exports;var r=e[o]={exports:{}};return a[o](r,r.exports,i),r.exports}i.m=a,function(){var a=[];i.O=function(e,o,n,r){if(!o){var w=1/0;for(l=0;l<a.length;l++){o=a[l][0],n=a[l][1],r=a[l][2];for(var z=!0,s=0;s<o.length;s++)(!1&r||w>=r)&&Object.keys(i.O).every((function(a){return i.O[a](o[s])}))?o.splice(s--,1):(z=!1,r<w&&(w=r));if(z){a.splice(l--,1);var d=n();void 0!==d&&(e=d)}}return e}r=r||0;for(var l=a.length;l>0&&a[l-1][2]>r;l--)a[l]=a[l-1];a[l]=[o,n,r]}}(),function(){i.n=function(a){var e=a&&a.__esModule?function(){return a["default"]}:function(){return a};return i.d(e,{a:e}),e}}(),function(){i.d=function(a,e){for(var o in e)i.o(e,o)&&!i.o(a,o)&&Object.defineProperty(a,o,{enumerable:!0,get:e[o]})}}(),function(){i.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(a){if("object"===typeof window)return window}}()}(),function(){i.o=function(a,e){return Object.prototype.hasOwnProperty.call(a,e)}}(),function(){var a={143:0};i.O.j=function(e){return 0===a[e]};var e=function(e,o){var n,r,w=o[0],z=o[1],s=o[2],d=0;if(w.some((function(e){return 0!==a[e]}))){for(n in z)i.o(z,n)&&(i.m[n]=z[n]);if(s)var l=s(i)}for(e&&e(o);d<w.length;d++)r=w[d],i.o(a,r)&&a[r]&&a[r][0](),a[r]=0;return i.O(l)},o=self["webpackChunkpytania_na_obrone"]=self["webpackChunkpytania_na_obrone"]||[];o.forEach(e.bind(null,0)),o.push=e.bind(null,o.push.bind(o))}();var o=i.O(void 0,[998],(function(){return i(7695)}));o=i.O(o)})();
//# sourceMappingURL=app.1df2946f.js.map